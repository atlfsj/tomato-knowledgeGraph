{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/d3graph.vue?54c9","webpack:///./src/views/404.vue?5d1b","webpack:///./src/App.vue?90a8","webpack:///./src/App.vue","webpack:///./src/App.vue?3746","webpack:///./src/views/2dView.vue","webpack:///./src/components/gSearch.vue","webpack:///src/components/gSearch.vue","webpack:///./src/components/gSearch.vue?effd","webpack:///./src/components/gSearch.vue?b167","webpack:///./src/components/d3graph.vue","webpack:///./src/plugins/d3-context-menu.js","webpack:///src/components/d3graph.vue","webpack:///./src/components/d3graph.vue?51e1","webpack:///./src/components/d3graph.vue?57f5","webpack:///src/views/2dView.vue","webpack:///./src/views/2dView.vue?0b84","webpack:///./src/views/2dView.vue?3ecb","webpack:///./src/views/404.vue","webpack:///src/views/404.vue","webpack:///./src/views/404.vue?0fb0","webpack:///./src/views/404.vue?24dd","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/components/d3graph.vue?494d","webpack:///./src/views/2dView.vue?2d9e","webpack:///./src/components/gSearch.vue?b407"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","render","_vm","this","_c","_self","attrs","staticRenderFns","script","component","staticClass","on","update","names","labels","linkTypes","staticStyle","style","scrollerWidth","scrollerHeight","_v","model","nbValue","callback","$$v","expression","_l","nbOptions","item","directives","rawName","fullscreenLoading","modifiers","label","disabled","input","results","watch","mounted","methods","initdata","initCondition","kgValue","originalValue","typeValue","yearValue","axios","method","url","params","type_name","doc_source","doc_author","doc_year","then","querySearch","cb","createFilter","loadAll","address","inputDisable","keywords","searchKeyWords","clearKeyWords","kgOptions","_e","originalOptions","typeOptions","yearOptions","indicator_left","indicator_top","index","backgroundColor","states","colors","hideNodeOfType","_s","undefined","selectNodeData","info_top","color","slot","properties","nodeObjMap","None","_d3","install","d3","contextMenu","menu","openCallback","selectAll","enter","append","attr","select","event","console","log","elm","html","list","title","e","action","pageX","pageY","preventDefault","setup","document","props","type","default","nodes","links","indicator_right","svgDom","nodeState","textState","isNodeClicked","temp","dialogFormVisible","isEdit","qtValue","kgTemp","originalTemp","typeTemp","yearTemp","searchValue","qtOptions","computed","isShowNode","isShowText","gDensity","gDegree","gMainDegree","gSparsity","created","beforeDestroy","selectInit","onChange","btnEdit","doEdit","message","cancelEdit","changeTextState","text","d3init","stateInit","d3render","_this","translate","svg","radius","iterations","strength","force","join","size","link","linksName","angle","node","d3text","topY","midY","botText","simulation","distance","changeGraphStyle","clearGraphStyle","drag","subject","addMarkers","components","gSearch","d3graph","d3jsonParser","nodeSet","id","source","target","_m","$event","$router","go","Vue","use","VueRouter","routes","path","Home","meta","NotFound","router","ElementUI","config","productionTip","$events","h","App","$mount","beforeEach","to","from","next"],"mappings":"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,WAIA,qCACA,wCAGA,gBACA,mBAGA,CACAK,iBACAE,eACA,2BAEA,2BACA,gBACA,oBAIAgB,QACAC,qBACAC,UAEAvC,YACA,oBACA,WACA,uBACA,mBACA,uBACA,iBAGAzC,YACAC,kBACAC,cACAC,cACA8E,YACAC,WACAC,iBACAC,aACAC,aACAC,eACAhE,wBACAE,2BACAC,eACAC,eACA6D,YACAhJ,UACAgD,cAIAiG,UACAC,sBAEA,2BAEAC,sBAEA,2BAEAC,WACA,wGAEAC,UACA,wDAGAC,gBAWAC,YACA,uFAGAnG,OAEAjG,UAOA,GANA6J,iBAEA,yBACA,+BACA,wCACA,cACA,mBACA,2BACA,CACA,oBACAA,eAEA,kEAEA,mCACA,cAKA,qCAEA,0DACA,iCACA,eAGA,0DACA,iCACA,eAGA,mBAIA,gEACA,mCACA,SAIA,qCAEA,0DACA,iCACA,SAGA,0DACA,iCACA,SAGA,mBAKA,+DACA,wCACA1H,uCAEA,GAEA,YAIA,mEACA,wCACAA,uCAEA,GAEA,eAUAkK,YAGAnG,UACA,kBAEA,cAEAxC,qBACA,6DACA,4BACA,mCACA,wCACA,8BAEA,6DACA,4BACA,mCACA,wCACA,4CACA,4BAGA4I,gBAEA,yBACA,yCAEAnG,SACAoG,aACA7F,gBACAC,cACAC,2DAEAM,SACA,wBAEAR,gBACAC,cACAC,2DAEAM,SACA,+BAEAR,gBACAC,cACAC,2DAEAM,SACA,0BAEAR,gBACAC,cACAC,uDAEAM,SACA,2BAGAsF,cACA,uKAGA,qBAFA,sBAMAC,UACA,2DACA,0BACA5C,kCAEA6C,SAEA,QAEA,wCACA,yCACA,8BAIA,iCAGA,wCACA,mCACA,MAEApM,IAEA,0BACA,cACA,eACAqM,eACAhC,kBAGAiC,aACA,2BAGAC,mBAEA,uBACA,iBAEA,0CACAhD,eAEA,mBACAiD,0BAkBAA,6BAQAvE,kBACA,+CACA,gCAEA,+BACA,yBAIA,SAGA,+BAGA,8BAKA,2BACA,SACA,IAEA,KAIA,sCACA,2BACA,iDAEA,WAGA,sCACA,4BACA,8BACA,mDAEA,WAQA,qBAEA,sCAIAZ,gBACA,iBACA,uBACA,mBACA,mBACA,iBACA,iBACA,6BACA,yBACA,6BACA,qCACA,0BACA,gCAGAD,kBAmBA,GAjBA,2BACA,+BACA,uCACA,gCACA,6BACA,yBACA,6BACA,qCACA,0BACA,4BACA,aACA,mBACA,eACA,eACA,yBAGA,mBACA,2BAGA,CACA,oBACAmC,eAEA,kEAEA,mCAEA,cAKA,qCAEA,0DACA,iCACA,eAGA,0DACA,iCACA,eAGA,mBAIA,gEACA,mCACA,cAIA,qCAEA,0DACA,iCACA,eAGA,0DACA,iCACA,eAGA,mBAKA,+DACA,wCACA1H,uCAEA,GAEA,YAIA,mEACA,wCACAA,uCAEA,GAEA,cAMA4K,SACA,2BACA,2BACA,gCAEA,gBAEA,kBAGAC,YACA,iBACA,iBAEA,iDAEAC,WACA,WAGAC,iCAGA,eACA3I,gBAEA,sBAEA,uBAEA,oBACA,wBAIA3D,+BAEA,oBACAuM,gCAWAC,oEAEA3D,YACAC,qBACAA,sBAEA,kBAaA,0BACA2D,UACA,IAEAC,gBACAC,cAGA,mCACAC,2CACAA,oDAEAA,6GACAA,qBAKA,gBACA9D,sBACAH,kBACAvJ,yBACAyJ,eACAC,iCAEA,YAEA+D,aACA/D,qCAEA,gBACAA,0BACAH,kBACAvJ,iBACAyN,aACA5I,8BACAA,qBACAA,0BAEAiI,2BAWA,gBACApD,sBACAH,oBACAvJ,yBACAyJ,uCAGA,SACA,gBACA,iBACA,MACA,iBACAiE,KACA,MACA,iBACAA,KACA,MACA,QACAA,KACA,MAEA,cAEAhE,gBACA,qCACA,oDAGAA,sBACAA,kCACAA,mBACA9I,mBAEA2D,wBAEA,0BACA,sBACA,kBACA,OAMA,qBACA,eACA,iBAGA2I,gCACAA,kCACAA,mCAGA,qBACA,SAEAA,mDAIA,2BACAA,yBAEA3I,6BAEA,0BACA,sBACA,kBACA,OAMA,qBACA,eACA,eAGA2I,gCAIA,2BACAA,yBAEA3I,oBACAsF,gCACA,qBACA,uBAEA,oBACA,yBAIAtF,8CAeA,gBACAmF,sBACAH,kBACAvJ,iBACAwJ,QACAC,wCACAC,wBACAA,kCACAA,6BACAA,sBACA,iDAEA9I,mBAEA2D,wBAGA,0BAGA,qBACA2I,kCACA,sBACA,mBAIA,qBACA,yBAEAA,mCACAA,mDAEA,QACA,4BAEA,KADA,EACA,kBACA,MAEArD,eACAqD,6CAGArD,eACA,2BACAqD,0BAEA3I,6BAGA,0BAGA,qBAEA,kBACA,iBAoBAsF,eACA,2BACAqD,0BAEA3I,oBACA,qBACA,uBAEA,oBACA,yBAIAA,8CAqDA,aACAoJ,EACAjE,yBACAA,yBACAA,yBACAA,yBAEAkE,EACAlE,qBACA,wEACA,sEAGA,kEACA,2BAgBA,OAZA,sBAEA,yBACAmE,MAKA,wBAEAA,MAEA,wCAGAC,EACApE,kBACAA,kBAEAoD,gCACA,SACA,gBACA,iBACA,MACA,iBACAY,KACA,MACA,iBACAA,KACA,MACA,QACAA,KACA,MAGA,OADAA,KACA,8CAWA,gBACA,iBACA,QACAK,kBACArE,YACAA,YACAoD,YACA,CACA,yBACA,mBACA,uBACA,MACA,IACA,KACA,MACAkB,MACAC,OACA,OACAC,0BAGAH,WACAA,kBACArE,YACAA,YACAoD,iBACA,YAEAiB,kBACArE,YACAA,YACAoD,iBACA,YAEAiB,kBACArE,YACAA,YACAoD,iBACA,aAnJAgB,6CAGAK,eAEAA,gBACArD,kBACAsD,aACA,SACA,uBACA,iBACAA,MACA,MACA,iBACAA,MACA,MACA,iBACAA,MACA,MACA,QACAA,MACA,MAEA,uBACA,iBACAA,MACA,MACA,iBACAA,MACA,MACA,iBACAA,MACA,MACA,QACAA,MACA,MAEA,cAkJAC,oBAGA,kEAEA,wBACA,cAMA,qCAEA,gFACA,eAEA,gFACA,eAGA,0CAIA,+CACA3E,iBAEA,wBACA,SAMA,qCAEA,gFACA,SAEA,gFACA,SAGA,0CAIA,+CACAA,gBACA,yDACA,SAEA,kCAGAA,qBACA,yDACA,qBAEA,mBAIA,mDACAA,gBACA,yDACA,SAEA,mCAIA4E,kBAEA,kEACA,gEACA,qGACA,qEAGAC,QACA,cACA,uBAGA,cACA,sCACA3E,yBACAA,yBAGA,cACAA,iBACAA,iBAGA,cACA,2BAMA,mBACA4E,WACAjK,cACAA,aACAA,aAGAkK,aAEA,iCAEA,mBACA/E,uBACAA,sBACAA,uBACAA,kCACAA,qCACAA,6BACAA,gBACAA,eACAA,uBACAA,wBACAD,eACAC,gCACAA,uBACAA,0BAEA,mBACAA,0BACAA,sBACAA,uBACAA,kCACAA,qCACAA,6BACAA,gBACAA,eACAA,uBACAA,wBACAD,eACAC,gCACAA,uBACAA,6BC91CiV,ICS7U,G,oBAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,OAIa,I,QCGA,GACfgF,YACAC,UACAC,WAEA5O,OACA,OACAA,MACA6K,SACAC,UAIArG,sDACAC,wGACAC,iBAGAwB,SACA3B,UACA,sBAEAqK,gBACA,WACA,KACA,KASA,eACA,2BAEA,iCACAC,yBACAjE,QACAkE,oBACAlJ,wBACAiD,kCAGA,+BACAgG,uBACAjE,QACAkE,kBACAlJ,sBACAiD,+BAGAgC,QACAkE,4BACAC,0BACAtE,yBACA7B,uCAIA,WAAA+B,QAAAC,SACA,SACA,gDCtFgV,ICQ5U,G,UAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,OAIa,I,QCnBXjH,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACM,YAAY,qCAAqC,CAACN,EAAG,MAAM,CAACM,YAAY,yBAAyB,CAACN,EAAG,MAAM,CAACM,YAAY,gBAAgB,CAACN,EAAG,KAAK,CAACM,YAAY,mBAAmB,CAACR,EAAIkB,GAAG,SAASlB,EAAIoL,GAAG,GAAGlL,EAAG,YAAY,CAACO,GAAG,CAAC,MAAQ,SAAS4K,GAAQ,OAAOrL,EAAIsL,QAAQC,IAAI,MAAM,CAACvL,EAAIkB,GAAG,WAAWhB,EAAG,YAAY,CAACM,YAAY,uBAAuBJ,MAAM,CAAC,KAAO,WAAWK,GAAG,CAAC,MAAQ,SAAS4K,GAAQ,OAAOrL,EAAIsL,QAAQtO,KAAK,QAAQ,CAACgD,EAAIkB,GAAG,WAAW,QAE9gBb,EAAkB,CAAC,WAAY,IAAIL,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,IAAI,CAACM,YAAY,kBAAkB,CAACR,EAAIkB,GAAG,aAAahB,EAAG,KAAK,CAACF,EAAIkB,GAAG,QAAQlB,EAAIkB,GAAG,aCYlJ,GACf5C,YCf6U,ICQzU,G,UAAY,eACd,EACA,EACA,GACA,EACA,KACA,KACA,OAIa,I,QCdfkN,aAAIC,IAAIC,QAER,MAAMC,EAAS,CACb,CACEC,KAAM,IACNtN,KAAM,OACNiC,UAAWsL,EACXC,KAAK,CAEH1F,MAAO,YAET,CACAwF,KAAM,OACNtN,KAAM,WACNiC,UAAWwL,EACXD,KAAK,CAEH1F,MAAO,cAKP4F,EAAS,IAAIN,OAAU,CAC3BC,WAGaK,QCtBfR,aAAIC,IAAIQ,KACRT,aAAIU,OAAOC,eAAgB,EAC3BX,aAAI5O,UAAUwP,QAAU,IAAIZ,aAC5B,IAAIA,aAAI,CACNQ,SACAjM,OAAQsM,GAAKA,EAAEC,KACdC,OAAO,QAEVP,EAAOQ,WAAW,CAACC,EAAIC,EAAMC,KAEvBF,EAAGX,KAAK1F,QACVO,SAASP,MAAQqG,EAAGX,KAAK1F,OAE3BuG,O,oFCtBF,W,80YCAA,W,kCCAA","file":"js/app.8f98483d.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/tomato-knowledgeGraph/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./d3graph.vue?vue&type=style&index=0&id=6b828699&prod&lang=scss&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./404.vue?vue&type=style&index=0&id=9e3d39e8&prod&lang=css&\"","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&id=2252555e&prod&lang=scss&\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=2252555e&\"\nvar script = {}\nimport style0 from \"./App.vue?vue&type=style&index=0&id=2252555e&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"gContainer\"},[_c('gSearch',{on:{\"getData\":_vm.update}}),_c('d3graph',{attrs:{\"data\":_vm.data,\"names\":_vm.names,\"labels\":_vm.labels,\"linkTypes\":_vm.linkTypes}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticStyle:{\"margin-top\":\"0.5rem\"}},[_c('el-col',{staticClass:\"numberNode\",style:({'--scrollerWidth': this.scrollerWidth , '--scrollerHeight':this.scrollerHeight}),attrs:{\"span\":50}},[_c('span',{staticClass:\"policyFont\"},[_vm._v(\"节点数:\")]),_c('el-select',{staticStyle:{\"display\":\"inline-block\"},attrs:{\"id\":\"number\"},model:{value:(_vm.nbValue),callback:function ($$v) {_vm.nbValue=$$v},expression:\"nbValue\"}},_vm._l((_vm.nbOptions),function(item){return _c('el-option',{directives:[{name:\"loading\",rawName:\"v-loading.fullscreen.lock\",value:(_vm.fullscreenLoading),expression:\"fullscreenLoading\",modifiers:{\"fullscreen\":true,\"lock\":true}}],key:item.value,attrs:{\"label\":item.label,\"value\":item.value,\"disabled\":item.disabled}})}),1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div style=\"margin-top: 0.5rem;\">\r\n    <el-col :span=\"50\" :style=\"{'--scrollerWidth': this.scrollerWidth , '--scrollerHeight':this.scrollerHeight}\" class=\"numberNode\">\r\n      <span class=\"policyFont\">节点数:</span>\r\n      <el-select v-model=\"nbValue\" style=\"display: inline-block\" id=\"number\">\r\n        <el-option\r\n          v-loading.fullscreen.lock=\"fullscreenLoading\"\r\n          v-for=\"item in nbOptions\"\r\n          :key=\"item.value\"\r\n          :label=\"item.label\"\r\n          :value=\"item.value\"\r\n          :disabled=\"item.disabled\">\r\n        </el-option>\r\n      </el-select>\r\n    </el-col>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n  name: 'gSearch',\r\n  data() {\r\n    return {\r\n      fullscreenLoading:false,\r\n      input: '',\r\n      mode: '1',\r\n      // 后台请求到的json数据\r\n      // records.json 获取数据\r\n      data: require('../data/records.json'),\r\n      results: [],\r\n      nbOptions: [{\r\n        value: 10,\r\n        label: '10'\r\n      },{\r\n        value: 20,\r\n        label: '20'\r\n      }, {\r\n        value: 40,\r\n        label: '40'\r\n      }, {\r\n        value: 60,\r\n        label: '60'\r\n      }, {\r\n        value: 80,\r\n        label: '80'\r\n      }, {\r\n        value: 0,\r\n        label: '所有'\r\n      }],\r\n      nbValue: 10,\r\n      scrollerWidth: 0,\r\n      scrollerHeight: 0,\r\n    }\r\n  },\r\n  watch: {\r\n    nbValue(val, oldval) {\r\n      this.initdata(val)\r\n    },\r\n  },\r\n  mounted() {\r\n    this.initdata()\r\n    this.initCondition()\r\n    this.results = this.loadAll()\r\n    this.$events.$on('resize', () => {\r\n      var position = document.getElementById('svg').getBoundingClientRect();\r\n      this.scrollerWidth = (position.left + 20) + 'px'\r\n      this.scrollerHeight = (position.top + 20) + 'px'\r\n    });\r\n    var position = document.getElementById('svg').getBoundingClientRect();\r\n    this.scrollerWidth = (position.left + 20) + 'px'\r\n    this.scrollerHeight = (position.top + 20) + 'px'\r\n  },\r\n  methods: {\r\n    initdata(nbvalue = 10) {\r\n      // this.fullscreenLoading = true\r\n      // axios({\r\n      //   method: 'post',\r\n      //   url: 'http://39.101.74.24:8081/hugegraph/refresh',\r\n      // })\r\n      // axios({\r\n      //   method: 'post',\r\n      //   url: 'http://39.101.74.24:8081/hugegraph/nodeNumberLimit',\r\n      //   params: {\r\n      //     nodeNumber: this.nbValue\r\n      //   },\r\n      // })\r\n      //   .then((res) => {\r\n      //     this.data = res.data\r\n      //     this.fullscreenLoading = false\r\n          this.$emit('getData', this.data)\r\n      //   })\r\n      // this.$events.$on(\"clearKey\",()=>{\r\n      //   axios({\r\n      //     method: 'post',\r\n      //     url: 'http://39.101.74.24:8081/hugegraph/nodeNumberLimit',\r\n      //     params: {\r\n      //       nodeNumber: this.nbValue\r\n      //     },\r\n      //   })\r\n      //     .then((res) => {\r\n      //       this.data = res.data\r\n      //       this.fullscreenLoading = false\r\n      //       this.$emit('getData', this.data)\r\n      //     })\r\n      // })\r\n    },\r\n    initCondition(){\r\n      this.$events.$on(\"change\",(kgValue,originalValue, typeValue,yearValue,fullscreenLoading)=>{\r\n        if(kgValue=='无')\r\n          kgValue = ''\r\n        if(originalValue=='无')\r\n          originalValue = ''\r\n        if(typeValue=='无')\r\n          typeValue = ''\r\n        if(yearValue=='无'||yearValue==' ')\r\n          yearValue = ''\r\n        axios({\r\n          method: 'post',\r\n          url: 'http://39.101.74.24:8081/hugegraph/selectByCondition',\r\n          params: {\r\n            type_name: typeValue,\r\n            doc_source: originalValue,\r\n            doc_author: kgValue,\r\n            doc_year: yearValue\r\n          },\r\n        })\r\n          .then((res) => {\r\n            this.data = res.data\r\n            this.$emit('getData', this.data)\r\n          })\r\n      })\r\n    },\r\n    querySearch(queryString, cb) {\r\n      var res = this.results\r\n      var results = queryString ? res.filter(this.createFilter(queryString)) : res\r\n      // 调用 callback 返回建议列表的数据\r\n      cb(results)\r\n    },\r\n    createFilter(queryString) {\r\n      return (res) => {\r\n        return (res.value.toLowerCase().indexOf(queryString.toLowerCase()) !== -1)\r\n      }\r\n    },\r\n    // 模拟加载数据\r\n    loadAll() {\r\n      return [\r\n        {value: '浙江鹏顺进出口有限公司', address: '浙江诸暨艮塔路9号银证大厦8楼'},\r\n        {value: '玉环达丰环保设备有限公司', address: '玉环市芦浦镇漩门工业城'},\r\n        {value: '宁波海天精工股份有限公司', address: '宁波市北仑区黄山西路235号'},\r\n        {value: '象山东兴雕刻古董家具有限公司', address: '城西路4号'},\r\n        {value: '绍兴千海进出口有限公司', address: '绍兴袍江启圣路以南与越英路交叉口生产车间'},\r\n        {value: '深圳万测进出口有限公司', address: '深圳'}\r\n      ]\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='scss' >\r\n.el-select {\r\n  width: 120px;\r\n  // background-color: #fff;\r\n}\r\n\r\n.input-with-select .el-input-group__prepend {\r\n  background-color: #6ecbf3;\r\n}\r\n\r\n.numberNode {\r\n  position: absolute;\r\n  text-align: left;    \r\n  left: var(--scrollerWidth);\r\n  top: var(--scrollerHeight);\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./gSearch.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./gSearch.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./gSearch.vue?vue&type=template&id=6955bc42&\"\nimport script from \"./gSearch.vue?vue&type=script&lang=js&\"\nexport * from \"./gSearch.vue?vue&type=script&lang=js&\"\nimport style0 from \"./gSearch.vue?vue&type=style&index=0&id=6955bc42&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticStyle:{\"height\":\"100%\",\"width\":\"100%\"}},[_c('div',{staticClass:\"search-bar\",staticStyle:{\"height\":\"20%\",\"max-height\":\"186px\"}},[_c('el-row',{staticStyle:{\"padding-top\":\"10px\",\"margin-left\":\"50px\"},attrs:{\"gutter\":20}},[_c('el-col',{staticStyle:{\"padding-left\":\"0px\"},attrs:{\"span\":17}},[_c('el-input',{staticStyle:{\"height\":\"75px\",\"padding-top\":\"10px\"},attrs:{\"clearable\":\"\",\"placeholder\":\"\",\"size\":\"medium\",\"disabled\":_vm.inputDisable},model:{value:(_vm.keywords),callback:function ($$v) {_vm.keywords=$$v},expression:\"keywords\"}})],1),_c('el-col',{staticStyle:{\"margin-top\":\"10px\"},attrs:{\"span\":3}},[_c('el-button',{directives:[{name:\"loading\",rawName:\"v-loading.fullscreen.lock\",value:(_vm.fullscreenLoading),expression:\"fullscreenLoading\",modifiers:{\"fullscreen\":true,\"lock\":true}}],attrs:{\"type\":\"primary\",\"icon\":\"el-icon-search\",\"size\":\"medium\",\"id\":\"ButtonID\"},on:{\"click\":_vm.searchKeyWords}},[_vm._v(\"搜索 \")])],1),_c('el-col',{staticStyle:{\"margin-top\":\"10px\",\"padding-right\":\"53px\",\"text-align\":\"center\",\"padding-left\":\"0px\"},attrs:{\"span\":3}},[_c('el-button',{directives:[{name:\"loading\",rawName:\"v-loading.fullscreen.lock\",value:(_vm.fullscreenLoading),expression:\"fullscreenLoading\",modifiers:{\"fullscreen\":true,\"lock\":true}}],attrs:{\"type\":\"primary\",\"icon\":\"el-icon-refresh\",\"size\":\"medium\"},on:{\"click\":_vm.clearKeyWords}},[_vm._v(\"重置 \")])],1)],1),_c('el-row',{staticStyle:{\"margin-left\":\"50px\"},attrs:{\"gutter\":80}},[_c('el-col',{staticStyle:{\"padding-left\":\"0px\",\"padding-right\":\"0px\",\"text-align\":\"left\"},attrs:{\"span\":7}},[_c('span',{staticClass:\"policyFont\"},[_vm._v(\"患病名称: \")]),_c('el-select',{staticStyle:{\"display\":\"inline-block\"},model:{value:(_vm.kgValue),callback:function ($$v) {_vm.kgValue=$$v},expression:\"kgValue\"}},_vm._l((_vm.kgOptions),function(item,i){return ((item==='') ? item = '无':item)?_c('el-option',{key:i,attrs:{\"label\":item,\"value\":item,\"disabled\":item.disabled}}):_vm._e()}),1)],1),_c('el-col',{staticStyle:{\"padding-left\":\"0px\",\"padding-right\":\"0px\",\"text-align\":\"left\"},attrs:{\"span\":7}},[_c('span',{staticClass:\"policyFont\"},[_vm._v(\"发病部位: \")]),_c('el-select',{staticStyle:{\"display\":\"inline-block\"},model:{value:(_vm.originalValue),callback:function ($$v) {_vm.originalValue=$$v},expression:\"originalValue\"}},_vm._l((_vm.originalOptions),function(item,i){return ((item==='') ? item = '无':item)?_c('el-option',{key:i,attrs:{\"label\":item,\"value\":item,\"disabled\":item.disabled}}):_vm._e()}),1)],1),_c('el-col',{staticStyle:{\"padding-left\":\"0px\",\"padding-right\":\"0px\",\"text-align\":\"left\"},attrs:{\"span\":7}},[_c('span',{staticClass:\"policyFont\"},[_vm._v(\"治疗周期: \")]),_c('el-select',{staticStyle:{\"display\":\"inline-block\"},model:{value:(_vm.typeValue),callback:function ($$v) {_vm.typeValue=$$v},expression:\"typeValue\"}},_vm._l((_vm.typeOptions),function(item,i){return ((item==='') ? item = '无':item)?_c('el-option',{key:i,attrs:{\"label\":item,\"value\":item,\"disabled\":item.disabled}}):_vm._e()}),1)],1),_c('el-col',{staticStyle:{\"padding-left\":\"0px\",\"padding-right\":\"0px\",\"text-align\":\"left\"},attrs:{\"span\":7}},[_c('span',{staticClass:\"policyFont\"},[_vm._v(\"治愈率: \")]),_c('el-select',{staticStyle:{\"display\":\"inline-block\"},model:{value:(_vm.yearValue),callback:function ($$v) {_vm.yearValue=$$v},expression:\"yearValue\"}},_vm._l((_vm.yearOptions),function(item,i){return ((item==='') ? item = '无':item)?_c('el-option',{key:i,attrs:{\"label\":item,\"value\":item,\"disabled\":item.disabled}}):_vm._e()}),1)],1)],1)],1),_c('svg',{attrs:{\"id\":\"svg\",\"width\":\"80%\",\"height\":\"70%\",\"color\":\"green\"}}),_c('div',{style:({'--indicator_left':this.indicator_left,'--indicator_top':this.indicator_top}),attrs:{\"id\":\"indicator\"}},_vm._l((_vm.names),function(name,index){return _c('div',{key:index},[_c('span',{staticStyle:{\"cursor\":\"pointer\"},style:({  backgroundColor: _vm.states[index] === 'on' ? _vm.colors[index] : '#008000' }),attrs:{\"data-state\":_vm.states[index],\"data-index\":index},on:{\"click\":_vm.hideNodeOfType}}),_c('span',{staticStyle:{\"color\":\"#888888\",\"width\":\"auto\"}},[_vm._v(_vm._s(name))])])}),0),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.selectNodeData.name !== undefined),expression:\"selectNodeData.name !== undefined\"}],style:({'--info_top': this.info_top}),attrs:{\"id\":\"info\"}},[_c('el-card',{staticClass:\"node-card\",style:({ backgroundColor: _vm.selectNodeData.color })},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(_vm._s(_vm.selectNodeData.name))])]),_vm._l((_vm.selectNodeData.properties),function(item,index){return _c('div',{key:index},[(item&&index!='name')?_c('span',{staticStyle:{\"margin-right\":\"8px\"}},[_vm._v(_vm._s((_vm.nodeObjMap[index] ? _vm.nodeObjMap[index] : index) + ':'))]):_vm._e(),(index!='name')?_c('span',{staticStyle:{\"text-align\":\"right\"}},[(_vm.nodeObjMap[index]==='政策内容'&&item!=_vm.None)?_c('b',[_c('a',{attrs:{\"href\":'http://39.101.74.24:8000/list-info?policyId='+item}},[_vm._v(\"链接\")])]):( (item=='None') ? item='无' :item)?_c('b',[_vm._v(_vm._s(item))]):_vm._e()]):_vm._e()])})],2)],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","let _d3 = null\r\n// 为d3注册该右键菜单插件\r\nfunction install (d3) {\r\n  _d3 = d3\r\n  _d3.contextMenu = contextMenu\r\n}\r\nconst contextMenu = function (menu, openCallback) {\r\n  // create the div element that will hold the context menu\r\n  _d3.selectAll('.d3-context-menu').data([1])\r\n    .enter()\r\n    .append('div')\r\n    .attr('class', 'd3-context-menu')\r\n\r\n  // close menu\r\n  _d3.select('body').on('click.d3-context-menu', function () {\r\n    _d3.select('.d3-context-menu').style('display', 'none')\r\n  })\r\n\r\n  // this gets executed when a contextmenu event occurs\r\n  return function (event, data) {\r\n    console.log(event)\r\n    // 指向右键触发的节点\r\n    var elm = this\r\n\r\n    _d3.selectAll('.d3-context-menu').html('')\r\n    var list = _d3.selectAll('.d3-context-menu').append('ul')\r\n    list.selectAll('li').data(menu).enter()\r\n      .append('li')\r\n      .html(function (d) {\r\n        return d.title\r\n      })\r\n      .on('click', function (e, d) {\r\n        // console.log(d)\r\n        d.action(elm, data)\r\n        _d3.select('.d3-context-menu').style('display', 'none')\r\n      })\r\n\r\n    // the openCallback allows an action to fire before the menu is displayed\r\n    // an example usage would be closing a tooltip\r\n    if (openCallback) openCallback(data)\r\n\r\n    // display context menu\r\n    _d3.select('.d3-context-menu')\r\n      .style('left', (event.pageX - 2) + 'px')\r\n      .style('top', (event.pageY - 2) + 'px')\r\n      .style('display', 'block')\r\n\r\n    event.preventDefault()\r\n  }\r\n}\r\n\r\nexport default install\r\n","<template>\r\n  <div style=\"height: 100%;width: 100%\">\r\n    <div class=\"search-bar\" style=\" height: 20%; max-height:186px;\">\r\n      <el-row :gutter=\"20\" style=\"padding-top: 10px;margin-left: 50px;\">\r\n        <el-col :span=\"17\" style=\"padding-left: 0px\">\r\n          <el-input v-model=\"keywords\" clearable placeholder=\"\"\r\n                    size=\"medium\" :disabled=\"inputDisable\" style=\"height: 75px; padding-top: 10px;\"/>\r\n        </el-col>\r\n        <el-col :span=\"3\" style=\"margin-top: 10px;\">\r\n          <el-button type=\"primary\" icon=\"el-icon-search\" size=\"medium\" @click=\"searchKeyWords\" id=\"ButtonID\"\r\n                     v-loading.fullscreen.lock=\"fullscreenLoading\">搜索\r\n          </el-button>\r\n        </el-col>\r\n        <el-col :span=\"3\" style=\"margin-top: 10px; padding-right: 53px; text-align: center; padding-left: 0px\">\r\n          <el-button type=\"primary\" icon=\"el-icon-refresh\" size=\"medium\" @click=\"clearKeyWords\"\r\n                     v-loading.fullscreen.lock=\"fullscreenLoading\">重置\r\n          </el-button>\r\n        </el-col>\r\n      </el-row>\r\n     <el-row :gutter=80 style=\"margin-left: 50px;\">\r\n        <el-col :span=\"7\" style=\"padding-left: 0px;padding-right: 0px;text-align: left;\">\r\n          <span class=\"policyFont\">患病名称: </span>\r\n          <el-select v-model=\"kgValue\" style=\"display: inline-block \">\r\n            <el-option\r\n              v-if=\"(item==='') ? item = '无':item\"\r\n              v-for=\"(item,i) in kgOptions\"\r\n              :key=\"i\"\r\n              :label=\"item\"\r\n              :value=\"item\"\r\n              :disabled=\"item.disabled\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-col>\r\n        <el-col :span=\"7\" style=\"padding-left: 0px;padding-right: 0px;text-align: left;\">\r\n          <span class=\"policyFont\">发病部位: </span>\r\n          <el-select v-model=\"originalValue\" style=\"display: inline-block\">\r\n            <el-option\r\n              v-if=\"(item==='') ? item = '无':item\"\r\n              v-for=\"(item,i) in originalOptions\"\r\n              :key=\"i\"\r\n              :label=\"item\"\r\n              :value=\"item\"\r\n              :disabled=\"item.disabled\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-col>\r\n        <el-col :span=\"7\" style=\"padding-left: 0px;padding-right: 0px;text-align: left;\">\r\n          <span class=\"policyFont\">治疗周期: </span>\r\n          <el-select v-model=\"typeValue\" style=\"display: inline-block\">\r\n            <el-option\r\n              v-if=\"(item==='') ? item = '无':item\"\r\n              v-for=\"(item,i) in typeOptions\"\r\n              :key=\"i\"\r\n              :label=\"item\"\r\n              :value=\"item\"\r\n              :disabled=\"item.disabled\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-col>\r\n        <el-col :span=\"7\" style=\"padding-left: 0px;padding-right: 0px;text-align: left;\">\r\n          <span class=\"policyFont\">治愈率: </span>\r\n          <el-select v-model=\"yearValue\" style=\"display: inline-block\">\r\n            <el-option\r\n              v-if=\"(item==='') ? item = '无':item\"\r\n              v-for=\"(item,i) in yearOptions\"\r\n              :key=\"i\"\r\n              :label=\"item\"\r\n              :value=\"item\"\r\n              :disabled=\"item.disabled\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-col>\r\n        <!--<el-col :span=\"7\" style=\"padding-left: 10px;padding-right: 0px;text-align: left;\">\r\n          <span class=\"policyFont\">其他:</span>\r\n          <el-select v-model=\"qtValue\" style=\"display: inline-block\">\r\n            <el-option\r\n              v-for=\"item in qtOptions\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\"\r\n              :disabled=\"item.disabled\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-col>-->\r\n      </el-row> \r\n    </div>\r\n    <svg\r\n      id=\"svg\"\r\n      width=\"80%\"\r\n      height=\"70%\"   \r\n      color=\"green\"\r\n\r\n    ></svg>\r\n\r\n    <!-- 绘制图例 -->\r\n    <div id=\"indicator\" :style=\"{'--indicator_left':this.indicator_left,'--indicator_top':this.indicator_top}\">\r\n      <!-- 利用item 遍历一个数组 利用index 遍历另外一个数组 -->\r\n      <div v-for=\"(name, index) in names\" :key=\"index\">\r\n        <span\r\n          @click=\"hideNodeOfType\"\r\n          :data-state=\"states[index]\"\r\n          :data-index=\"index\"\r\n          style=\"cursor: pointer;\"\r\n          :style=\"{  backgroundColor: states[index] === 'on' ? colors[index] : '#008000' }\"\r\n        ></span>\r\n        <span style=\"color: #888888;width: auto\">{{ name }}</span>\r\n      </div>\r\n    </div>\r\n    <!-- 绘制右边显示结果 -->\r\n    <div id=\"info\" :style=\"{'--info_top': this.info_top}\" v-show=\"selectNodeData.name !== undefined\">\r\n      <!-- <h4 :style=\"{ color: selectNodeData.color }\">{{ selectNodeData.name }}</h4>\r\n      <p v-for=\"(item, key) in selectNodeData.properties\" :key=\"item\">\r\n        <span>{{ key }}</span>\r\n        {{ item }}\r\n      </p> -->\r\n      <el-card\r\n        :style=\"{ backgroundColor: selectNodeData.color }\"\r\n        class=\"node-card\"\r\n      >\r\n        <div slot=\"header\" class=\"clearfix\">\r\n          <span>{{ selectNodeData.name }}</span>\r\n          <!--          <el-button-->\r\n          <!--            @click=\"btnEdit\"-->\r\n          <!--            style=\"float: right; padding: 3px 0;color: #409EFB;font-size: 15px;\"-->\r\n          <!--            type=\"text\"-->\r\n          <!--          >编辑-->\r\n          <!--          </el-button>-->\r\n        </div>\r\n        <div\r\n          v-for=\"(item, index) in selectNodeData.properties\" :key=\"index\"\r\n        >\r\n          <span style=\"margin-right: 8px;\"\r\n                v-if=\"item&&index!='name'\">{{ (nodeObjMap[index] ? nodeObjMap[index] : index) + ':' }}</span>\r\n          <span style=\"text-align: right;\" v-if=\"index!='name'\">\r\n            <b v-if=\"nodeObjMap[index]==='政策内容'&&item!=None\">\r\n              <a :href=\"'http://39.101.74.24:8000/list-info?policyId='+item\">链接</a>\r\n            </b>\r\n            <b v-else-if=\" (item=='None') ? item='无' :item\">{{ item }}</b>\r\n          </span>\r\n        </div>\r\n      </el-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from 'd3'\r\nimport install from '@/plugins/d3-context-menu';  \r\nimport axios from \"axios\";\r\nimport { off } from 'process';\r\n\r\ninstall(d3) // 为d3注册右键菜单插件\r\nexport default {\r\n  setup() {\r\n    document.title = '知识图谱番茄病虫害识别与诊断专家系统'\r\n  },\r\n  name: 'd3graph',\r\n  props: {\r\n    data: {\r\n      type: Object,\r\n      default: function () {\r\n        return {\r\n          nodes: [],\r\n          links: []\r\n        }\r\n      }\r\n    },\r\n    /* eslint-disable */\r\n    // 自定义图例（数组保证一一对应）\r\n    // names\t\t图例名称变量制作图标\r\n    // labels\t\t节点的标签名称（与records.json中保证相同）\r\n    names: {\r\n      type: Array\r\n    },\r\n    labels: Array,\r\n    linkTypes: Array\r\n  },\r\n  data() {\r\n    return {\r\n      inputDisable: false,\r\n      fullscreenLoading: false,\r\n      info_top: 0,\r\n      indicator_left: 0,\r\n      indicator_right: 0,\r\n      svgDom: null, // svg的DOM元素 => d3.select('#svg1')\r\n      keywords: '',\r\n      nodeState: 0,\r\n      // 文本状态，表示是否显示文本信息（0：显示/1：不显示）\r\n      textState: 0,\r\n      // d3render()最终展示到页面上的数据（节点隐藏功能）\r\n      nodes: [],\r\n      links: [],\r\n      /* eslint-disable */\r\n      // 自定义图例及颜色（数组保证一一对应）\r\n      // colors\t\t图例颜色（9个颜色）\r\n      // states   图例状态（on：显示 / off：不显示）\r\n      colors: ['#0361d2', '#aaaaff', '#4e88af', '#9d76e7', '#FFC0CB', '#BA55D3', '#1E90FF', '#7FFFD4', '#FFFF00'],\r\n      states: [off],\r\n      selectNodeData: {}, // 选中节点的详细信息展示\r\n      isNodeClicked: false, // 是否点击（选中）节点\r\n      // 用于位置、大小矫正（暂不使用）\r\n      // svgTranslate: [240, 130],\r\n      // svgScale: 0.5,\r\n      // 右击事件的菜单栏\r\n      menu: [\r\n        {\r\n          title: '隐藏节点',\r\n          action: (elm, d) => {\r\n            console.log(d)\r\n            // 遍历删除节点\r\n            this.nodes = this.nodes.filter(node => {\r\n              if (node.id === d.id) return false\r\n              else return true\r\n            })\r\n            // 遍历删除关系\r\n            this.links = this.links.filter(link => {\r\n              if (link.source.id === d.id || link.target.id === d.id) return false\r\n              else return true\r\n            })\r\n            this.d3render() // 重新渲染图\r\n            this.stateInit()\r\n          },\r\n          disabled: false // optional, defaults to false\r\n        },\r\n        {\r\n          title: '显示节点关联图',\r\n          action: (elm, d) => {\r\n            console.log(d)\r\n            // 遍历保留对应节点\r\n            this.nodes = this.data.nodes.filter(node => {\r\n              if (node.id === d.id) return true\r\n              else {\r\n                for (var i = 0; i < this.data.links.length; i++) {\r\n                  // 如果links的起点等于name，并且终点等于正在处理的则显示\r\n                  if (this.data.links[i].source.id === node.id && this.data.links[i].target.id === d.id) {\r\n                    return true\r\n                  }\r\n                  if (this.data.links[i].target.id === node.id && this.data.links[i].source.id === d.id) {\r\n                    return true\r\n                  }\r\n                }\r\n                return false\r\n              }\r\n            })\r\n            // 遍历保留节点的关联关系\r\n            this.links = this.data.links.filter(link => {\r\n              if (link.source.id === d.id || link.target.id === d.id) return true\r\n              else return false\r\n            })\r\n            this.d3render() // 重新渲染图\r\n            this.stateInit()\r\n          }\r\n        },\r\n        {\r\n          title: '显示所有查询节点',\r\n          action: (elm, d) => {\r\n            this.nodes = this.data.nodes\r\n            // 遍历保留节点的关联关系\r\n            this.links = this.data.links\r\n            this.d3render() // 重新渲染图\r\n            this.stateInit()\r\n          }\r\n        }\r\n      ],\r\n      temp: {}, // 临时存储编辑时的节点信息\r\n      dialogFormVisible: false,\r\n      isEdit: true,\r\n      // 节点属性对应的标签名称\r\n      nodeObjMap: {\r\n        \"disease_name\": '患病名称',\r\n        \"intro\": '简介',\r\n        \"pathogenic_site\": '发病部位',\r\n        \"correlation\": '相关症状',\r\n        \"treatment_cycle\": '治疗周期',\r\n        \"cure_rate\": '治愈率'\r\n\r\n      },\r\n      kgValue: '无',\r\n      originalValue: '无',\r\n      typeValue: '无',\r\n      yearValue: '无',\r\n      qtValue: '无',\r\n      kgTemp: '无',\r\n      originalTemp: '无',\r\n      typeTemp: '无',\r\n      yearTemp: '无',\r\n      searchValue: '',\r\n      kgOptions: [\"晚疫病\",\"猝倒病\"],\r\n      originalOptions: [\"果实\",\"根\"],\r\n      typeOptions: [],\r\n      yearOptions: [],\r\n      qtOptions: [{\r\n        value: '无',\r\n        label: '无'\r\n      }],\r\n    }\r\n  },\r\n  computed: {\r\n    isShowNode: function () {\r\n      // `this` 指向 vm 实例\r\n      return this.nodeState === 0\r\n    },\r\n    isShowText: function () {\r\n      // `this` 指向 vm 实例\r\n      return this.textState === 0\r\n    },\r\n    gDensity() {\r\n      return this.nodes.length <= 1 ? 0 : (this.links.length / (this.nodes.length * (this.nodes.length - 1))).toFixed(2)\r\n    },\r\n    gDegree() {\r\n      return (this.links.length / this.nodes.length).toFixed(2)\r\n    },\r\n    // 企业实体的平均度数\r\n    gMainDegree() {\r\n      // 遍历节点\r\n      // this.nodes.forEach(node => {\r\n      //\r\n      // })\r\n      // // 遍历关系\r\n      // this.links.forEach(link => {\r\n      //\r\n      // })\r\n    },\r\n    // 稀疏度\r\n    gSparsity() {\r\n      return (this.links.length / (this.nodes.length * Math.log(this.nodes.length))).toFixed(2)\r\n    }\r\n  },\r\n  watch: {\r\n    // 当请求到新的数据时，重新渲染\r\n    data(newData, oldData) {\r\n      console.log(newData, oldData)\r\n      // 移除svg和元素注册事件，防止内存泄漏\r\n      this.svgDom.on('.', null)\r\n      this.searchValue = this.keywords\r\n      this.svgDom.selectAll('*').on('.', null)\r\n      this.d3init()\r\n      if (this.keywords === '') {\r\n        this.clearGraphStyle()\r\n      } else {\r\n        var name = this.keywords\r\n        console.log(name)\r\n        // 搜索所有的节点\r\n        this.svgDom.select('.nodes').selectAll('circle').attr('class', d => {\r\n          // 输入节点id的小写等于name则显示，否则隐藏\r\n          if (d.properties.name.indexOf(name) >= 0) {\r\n            return 'fixed'\r\n          } else {\r\n            // 优化：与该搜索节点相关联的节点均显示\r\n            // links链接的起始节点进行判断,如果其id等于name则显示这类节点\r\n            // 注意: graph=data\r\n            for (var i = 0; i < this.links.length; i++) {\r\n              // 如果links的起点等于name，并且终点等于正在处理的则显示\r\n              if ((this.links[i]['source'].properties.name.indexOf(name) >= 0) &&\r\n                (this.links[i]['target'].id == d.id)) {\r\n                return 'active'\r\n              }\r\n              // 如果links的终点等于name，并且起点等于正在处理的则显示\r\n              if ((this.links[i]['target'].properties.name.indexOf(name) >= 0) &&\r\n                (this.links[i]['source'].id == d.id)) {\r\n                return 'active'\r\n              }\r\n            }\r\n            return 'inactive' // 隐藏\r\n          }\r\n        })\r\n        // 搜索texts\r\n        this.svgDom.select('.texts').selectAll('text').attr('class', d => {\r\n          if (d.properties.name.indexOf(name) >= 0) {\r\n            return ''\r\n          } else {\r\n            // 优化：与该搜索节点相关联的节点均显示\r\n            // links链接的起始节点进行判断,如果其id等于name则显示这类节点\r\n            for (var i = 0; i < this.links.length; i++) {\r\n              // 如果links的起点等于name，并且终点等于正在处理的则显示\r\n              if ((this.links[i]['source'].properties.name.indexOf(name) >= 0) &&\r\n                (this.links[i]['target'].id == d.id)) {\r\n                return ''\r\n              }\r\n              //如果links的终点等于name，并且起点等于正在处理的则显示\r\n              if ((this.links[i]['target'].properties.name.indexOf(name) >= 0) &&\r\n                (this.links[i]['source'].id == d.id)) {\r\n                return ''\r\n              }\r\n            }\r\n            return 'inactive'\r\n          }\r\n        })\r\n        // 搜索links\r\n        // 显示相的邻边 注意 ||\r\n        this.svgDom.select(\".links\").selectAll('line').attr('class', d => {\r\n          if ((d.source.properties.name.indexOf(name) >= 0) ||\r\n            (d.target.properties.name.indexOf(name) >= 0)\r\n          ) {\r\n            return ''\r\n          } else {\r\n            return 'inactive' //隐藏\r\n          }\r\n        })\r\n        // 搜索linkTexts\r\n        this.svgDom.select(\".linkTexts\").selectAll('text').attr('class', d => {\r\n          if ((d.source.properties.name.indexOf(name) >= 0) ||\r\n            (d.target.properties.name.indexOf(name) >= 0)\r\n          ) {\r\n            return ''\r\n          } else {\r\n            return 'inactive' //隐藏\r\n          }\r\n        })\r\n      }\r\n    }\r\n    // kgValue: 'onChange',\r\n    // originalValue: 'onChange',\r\n    // typeValue: 'onChange',\r\n    // yearValue: 'onChange',\r\n  },\r\n  created() {\r\n    // this.states = Array(this.names.length).fill('on')\r\n  },\r\n  mounted() {\r\n    this.selectInit()\r\n    //图数据初始化\r\n    this.d3init()\r\n    //下拉框初始化\r\n    window.onresize = () => {\r\n      var position = document.getElementById('svg').getBoundingClientRect();\r\n      this.info_top = (position.top + 20) + 'px'\r\n      this.indicator_left = (position.left + 20) + 'px'\r\n      this.indicator_top = (position.bottom - 20 - 145) + 'px'\r\n      this.$events.$emit('resize')\r\n    }\r\n    var position = document.getElementById('svg').getBoundingClientRect();\r\n    this.info_top = (position.top + 20) + 'px'\r\n    this.indicator_left = (position.left + 20) + 'px'\r\n    this.indicator_top = (position.bottom - 20 - 145) + 'px'\r\n    this.$events.$on('setfullscreenLoading', (fullscreenLoading) => {\r\n      this.fullscreenLoading = fullscreenLoading\r\n    })\r\n  },\r\n  beforeDestroy() {\r\n    // 移除svg和元素注册事件，防止内存泄漏\r\n    this.svgDom.on('.', null)\r\n    this.svgDom.selectAll('*').on('.', null)\r\n  },\r\n  methods: {\r\n    selectInit() {\r\n      axios({\r\n        method: 'post',\r\n        url: 'http://39.101.74.24:8081/hugegraph/selectDocauthor',\r\n      })\r\n        .then((res) => {\r\n          this.kgOptions = res.data\r\n        });\r\n      axios({\r\n        method: 'post',\r\n        url: 'http://39.101.74.24:8081/hugegraph/selectDocsource',\r\n      })\r\n        .then((res) => {\r\n          this.originalOptionss = res.data\r\n        })\r\n      axios({\r\n        method: 'post',\r\n        url: 'http://39.101.74.24:8081//hugegraph/selectTypename',\r\n      })\r\n        .then((res) => {\r\n          this.typeOptions = res.data\r\n        })\r\n      axios({\r\n        method: 'post',\r\n        url: 'http://39.101.74.24:8081/hugegraph/selectYears',\r\n      })\r\n        .then((res) => {\r\n          this.yearOptions = res.data\r\n        })\r\n    },\r\n    onChange(val, oldV) {\r\n      if ((this.kgValue == '' || this.kgValue == '无') && (this.originalValue == '' || this.originalValue == '无') && (this.typeValue == '' || this.typeValue == '无') && (this.yearValue == '' || this.yearValue == '无')) {\r\n        this.inputDisable = false;\r\n      } else {\r\n        this.inputDisable = true;\r\n      }\r\n    },\r\n    // 编辑当前选中节点\r\n    btnEdit() {\r\n      this.temp = Object.assign({}, this.selectNodeData.properties) // copy obj\r\n      this.dialogFormVisible = true\r\n      console.log(this.selectNodeData)\r\n    },\r\n    doEdit() {\r\n      // console.log(this.data)\r\n      let i = 0\r\n      // 更新props的data 和 selectNodeData\r\n      this.selectNodeData.name = this.temp.name\r\n      this.selectNodeData.properties = this.temp\r\n      for (let node of this.data.nodes) {\r\n        // console.log(node.id === this.selectNodeData.id)\r\n        // console.log(node.id)\r\n        // console.log(this.selectNodeData.id)\r\n        if (node.id == this.selectNodeData.id) {\r\n          // this.$set(this.data.nodes, i, this.selectNodeData)\r\n          // this.$set(this.nodes, i, this.selectNodeData)\r\n          this.data.nodes[i].properties = this.temp\r\n          this.nodes[i].properties = this.temp\r\n          break\r\n        }\r\n        i++\r\n      }\r\n      this.dialogFormVisible = false\r\n      this.d3init()\r\n      this.$message({\r\n        message: '更新成功',\r\n        type: 'success'\r\n      })\r\n    },\r\n    cancelEdit() {\r\n      this.dialogFormVisible = false\r\n    },\r\n    // 隐藏文字\r\n    changeTextState(state) {\r\n      // state发生变化时才进行更新、处理\r\n      if (this.textState !== state) {\r\n        this.textState = state\r\n        // const text = d3.selectAll('.texts text')\r\n        const text = d3.selectAll('.linkTexts text')\r\n        console.log(text)\r\n        // 根据新的节点状态，在节点上展示不同的文本信息\r\n        if (this.textState === 2) {\r\n          text.style('display', 'none')\r\n          // 暂不作校准\r\n          // // transform属性数值化\r\n          // // 原：translate(40, 8) scale(1)\r\n          // // 现：[40, 8, 1]\r\n          // let transform = d3.select('#svg1 g').attr('transform')\r\n          // transform = transform\r\n          //   ? transform.match(/\\d.?/g).map(item => parseInt(item))\r\n          //   : [0, 0, 1]\r\n          // // 校准\r\n          // transform[0] = transform[0] + this.svgTranslate[0]\r\n          // transform[1] = transform[1] + this.svgTranslate[1]\r\n          // transform[2] = transform[2] * this.svgScale\r\n\r\n          // console.log(transform)\r\n          // // 隐藏节点后，svg自动缩放\r\n          // d3.select('#svg1 g').attr('transform', 'translate(' + transform[0] + ', ' + transform[1] + ') scale(' + transform[2] + ')')\r\n        } else {\r\n          text.style('display', 'block')\r\n          // 暂不作校准\r\n          // 显示节点后，svg自动还原\r\n          // d3.select('#svg1 g').attr('transform', '')\r\n        }\r\n      }\r\n    },\r\n    // 隐藏该类型的所有节点（图例）\r\n    hideNodeOfType(event) {\r\n      if (this.nodes.length === this.data.nodes.length\r\n        || this.states.some((state) => state === 'off')) {\r\n        // console.log(event.target.dataset)\r\n        const index = event.target.dataset.index\r\n        const state = event.target.dataset.state\r\n        // const nodeTypes = ['Enterprise', 'Type', 'Region', 'Country']\r\n        // const linkTypes = ['', 'type', 'locate', 'export']\r\n        // 图例的状态切换（对应类型的节点隐藏）\r\n        if (state === 'on') {\r\n          // 隐藏该类型的所有节点及关联关系\r\n          // this.states[index] = 'off'\r\n          this.$set(this.states, index, 'off')\r\n        } else {\r\n          // this.states[index] = 'on'\r\n          this.$set(this.states, index, 'on')\r\n        }\r\n        /**************************************\r\n         * 状态更新后，同时对数据更新\r\n         */\r\n        const indexs = this.states.map(s => {\r\n          if (s === 'on') {\r\n            return '1'\r\n          } else {\r\n            return '0'\r\n          }\r\n        })\r\n        // 遍历删除节点\r\n        this.nodes = this.data.nodes.filter(node => {\r\n          for (let i = 0; i < indexs.length; i++) {\r\n            if (node.label === this.labels[i] && indexs[i] === '0') return false\r\n          }\r\n          return true\r\n        })\r\n        // 遍历删除关系\r\n        this.links = this.data.links.filter(link => {\r\n          for (let i = 0; i < indexs.length; i++) {\r\n            if (i === 0 && indexs[i] === '0') return false\r\n            else if (link.type === this.linkTypes[i] && indexs[i] === '0') return false\r\n          }\r\n          return true\r\n        })\r\n        // 调试时使用\r\n        // console.log(indexs)\r\n        // console.log(this.data.nodes.length, this.data.links.length)\r\n        // console.log(this.nodes.length)\r\n        // console.log(this.links.length)\r\n        // 重新渲染\r\n        this.d3render()\r\n      } else {\r\n        this.$message.error('展示全部节点时才能隐藏图例')\r\n      }\r\n    },\r\n\r\n    clearKeyWords() {\r\n      this.kgValue = '无';\r\n      this.originalValue = '无';\r\n      this.typeValue = '无';\r\n      this.yearValue = '无';\r\n      this.qtValue = '无';\r\n      this.keywords = '';\r\n      this.yearTemp = this.yearValue;\r\n      this.kgTemp = this.kgValue;\r\n      this.typeTemp = this.typeValue;\r\n      this.originalTemp = this.originalValue;\r\n      this.fullscreenLoading = true;\r\n      this.$events.$emit('clearKey');\r\n    },\r\n    // 搜索包含关键字的节点\r\n    searchKeyWords(value) {\r\n      // 如果Input值是空的显示所有的圆和线(没有进行筛选)\r\n      if ((this.kgValue != this.kgTemp) ||\r\n        (this.typeValue != this.typeTemp) ||\r\n        (this.originalValue != this.originalTemp) ||\r\n        (this.yearValue != this.yearTemp)) {\r\n        this.yearTemp = this.yearValue;\r\n        this.kgTemp = this.kgValue;\r\n        this.typeTemp = this.typeValue;\r\n        this.originalTemp = this.originalValue;\r\n        this.fullscreenLoading = true;\r\n        this.$events.$emit('change',\r\n          this.kgValue,\r\n          this.originalValue,\r\n          this.typeValue,\r\n          this.yearValue,\r\n          this.fullscreenLoading,\r\n        );\r\n      }\r\n      if (this.keywords === '') {\r\n        this.clearGraphStyle()\r\n      }\r\n      // 否则判断判断三个元素是否等于name值，等于则显示该值\r\n      else {\r\n        var name = this.keywords\r\n        console.log(name)\r\n        // 搜索所有的节点\r\n        this.svgDom.select('.nodes').selectAll('circle').attr('class', d => {\r\n          // 输入节点id的小写等于name则显示，否则隐藏\r\n          if (d.properties.name.indexOf(name) >= 0) {\r\n            //todo\r\n            return 'fixed'\r\n          } else {\r\n            // 优化：与该搜索节点相关联的节点均显示\r\n            // links链接的起始节点进行判断,如果其id等于name则显示这类节点\r\n            // 注意: graph=data\r\n            for (var i = 0; i < this.links.length; i++) {\r\n              // 如果links的起点等于name，并且终点等于正在处理的则显示\r\n              if ((this.links[i]['source'].properties.name.indexOf(name) >= 0) &&\r\n                (this.links[i]['target'].id == d.id)) {\r\n                return 'active'\r\n              }\r\n              // 如果links的终点等于name，并且起点等于正在处理的则显示\r\n              if ((this.links[i]['target'].properties.name.indexOf(name) >= 0) &&\r\n                (this.links[i]['source'].id == d.id)) {\r\n                return 'active'\r\n              }\r\n            }\r\n            return 'inactive' // 隐藏\r\n          }\r\n        })\r\n        // 搜索texts\r\n        this.svgDom.select('.texts').selectAll('text').attr('class', d => {\r\n          if (d.properties.name.indexOf(name) >= 0) {\r\n            return 'fixed'\r\n          } else {\r\n            // 优化：与该搜索节点相关联的节点均显示\r\n            // links链接的起始节点进行判断,如果其id等于name则显示这类节点\r\n            for (var i = 0; i < this.links.length; i++) {\r\n              // 如果links的起点等于name，并且终点等于正在处理的则显示\r\n              if ((this.links[i]['source'].properties.name.indexOf(name) >= 0) &&\r\n                (this.links[i]['target'].id == d.id)) {\r\n                return 'active'\r\n              }\r\n              //如果links的终点等于name，并且起点等于正在处理的则显示\r\n              if ((this.links[i]['target'].properties.name.indexOf(name) >= 0) &&\r\n                (this.links[i]['source'].id == d.id)) {\r\n                return 'active'\r\n              }\r\n            }\r\n            return 'inactive'\r\n          }\r\n        })\r\n        // 搜索links\r\n        // 显示相的邻边 注意 ||\r\n        this.svgDom.select(\".links\").selectAll('line').attr('class', d => {\r\n          if ((d.source.properties.name.indexOf(name) >= 0) ||\r\n            (d.target.properties.name.indexOf(name) >= 0)\r\n          ) {\r\n            return ''\r\n          } else {\r\n            return 'inactive' //隐藏\r\n          }\r\n        })\r\n        // 搜索linkTexts\r\n        this.svgDom.select(\".linkTexts\").selectAll('text').attr('class', d => {\r\n          if ((d.source.properties.name.indexOf(name) >= 0) ||\r\n            (d.target.properties.name.indexOf(name) >= 0)\r\n          ) {\r\n            return ''\r\n          } else {\r\n            return 'inactive' //隐藏\r\n          }\r\n        })\r\n      }\r\n    },\r\n    // d3初始化，包括数据解析、数据渲染\r\n    d3init() {\r\n      this.links = this.data.links\r\n      this.nodes = this.data.nodes\r\n      this.svgDom = d3.select('#svg')  // 获取svg的DOM元素\r\n      // this.d3jsonParser(this.graph)\r\n      this.d3render()\r\n      // 数据状态初始化\r\n      this.stateInit()\r\n    },\r\n    // 数据状态初始化\r\n    stateInit() {\r\n      this.nodeState = 0\r\n      this.textState = 0\r\n      // console.log(this.names)\r\n      this.states = Array(this.names.length).fill('on')\r\n    },\r\n    d3render() {\r\n      var _this = this // 临时获取Vue实例，避免与d3的this指针冲突\r\n\r\n      // 渲染前清空svg内的元素\r\n      _this.svgDom.selectAll('*').remove()\r\n      // svg.selectAll('g').remove()\r\n\r\n      var svg = _this.svgDom\r\n        .on('click', () => {\r\n          // console.log(this.isNodeClicked)\r\n          this.isNodeClicked = false\r\n          // 移除所有样式\r\n          this.clearGraphStyle()\r\n          // 如果此时有搜索关键字，则鼠标离开时保留原搜索选中的节点\r\n          if (this.keywords !== '') {\r\n            this.searchKeyWords()\r\n          }\r\n        })\r\n        // 给画布绑定zoom事件（缩放、平移）\r\n        .call(d3.zoom().on('zoom', event => {\r\n          // console.log(event)\r\n          var scale = event.transform.k,\r\n            translate = [event.transform.x, event.transform.y]\r\n\r\n          // if (this.svgTranslate) {\r\n          //     translate[0] += this.svgTranslate[0]\r\n          //     translate[1] += this.svgTranslate[1]\r\n          // }\r\n\r\n          // if (this.svgScale) {\r\n          //     scale *= this.svgScale\r\n          // }\r\n\r\n          svg.attr('transform', 'translate(' + translate[0] + ', ' + translate[1] + ') scale(' + scale + ')');\r\n        }))\r\n        .append('g')\r\n        .attr('width', '100%')\r\n        .attr('height', '100%')\r\n\r\n      this.addMarkers()\r\n      // console.log(svg)\r\n      // 动态变化时，不再固定宽高\r\n      // var width = svg.attr(\"width\"),\r\n      //     height = svg.attr(\"height\")\r\n\r\n      // 解析json和数据处理\r\n      // 现在解析json直接在d3jsonParser()中更新nodes和links\r\n      // const data = this.d3jsonParser(this.graph)\r\n      // this.links = data.links.map(d => Object.create(d))\r\n      // this.nodes = data.nodes.map(d => Object.create(d))\r\n\r\n      // 定义碰撞检测模型\r\n      var forceCollide = d3.forceCollide()\r\n        .radius(d => {\r\n          return 16 * 3\r\n        })\r\n        .iterations(0.15)\r\n        .strength(0.75)\r\n\r\n      // 利用d3.forceSimulation()定义关系图 包括设置边link、排斥电荷charge、关系图中心点\r\n      var simulation = d3.forceSimulation(this.nodes)\r\n        .force(\"link\", d3.forceLink().id(d => d.id))\r\n        .force(\"charge\", d3.forceManyBody().strength(-100))\r\n        // .force(\"center\", d3.forceCenter(width / 2, height / 2)\r\n        .force(\"center\", d3.forceCenter(svg.node().parentElement.clientWidth / 2, svg.node().parentElement.clientHeight / 2))\r\n        .force(\"collision\", forceCollide)\r\n\r\n      // D3映射数据至HTML中\r\n      // g用于绘制所有边,selectALL选中所有的line,并绑定数据data(graph.links),enter().append(\"line\")添加元素\r\n      // 数据驱动文档,设置边的粗细\r\n      var link = svg.append(\"g\")\r\n        .attr(\"class\", \"links\")\r\n        .selectAll(\"line\")\r\n        .data(this.links).enter()\r\n        .append(\"line\")\r\n        .attr(\"stroke-width\", function (d) {\r\n          // 每次访问links的一项数据\r\n          return 2 //所有线宽度均为2\r\n        })\r\n        .join(\"path\")\r\n        .attr(\"marker-end\", \"url(#posMarker)\")\r\n\r\n      var linksName = svg.append(\"g\")\r\n        .attr(\"class\", \"linkTexts\")\r\n        .selectAll(\"text\")\r\n        .data(this.links)\r\n        .join(\"text\")\r\n        .style('text-anchor', 'middle')\r\n        .style('fill', '#fff')\r\n        .style('font-size', '12px')\r\n        // .style('font-weight', 'bold')\r\n        .text(d => d.properties.name)\r\n\r\n      // linksName\r\n      //   .append('textPath')\r\n      //   .attr('xlink:href', d => '#')\r\n      //   .attr('startOffset', '50%')\r\n\r\n      // 添加所有的点\r\n      // selectAll(\"circle\")选中所有的圆并绑定数据,圆的直径为d.size\r\n      // 再定义圆的填充色,同样数据驱动样式,圆没有描边,圆的名字为d.id\r\n      // call()函数：拖动函数,当拖动开始绑定dragstarted函数，拖动进行和拖动结束也绑定函数\r\n      var node = svg.append(\"g\")\r\n        .attr(\"class\", \"nodes\")\r\n        .selectAll(\"circle\")\r\n        .data(this.nodes).enter()\r\n        .append(\"circle\").attr(\"r\", function (d) {\r\n          // 每次访问nodes的一项数据\r\n          // console.log(d)\r\n          let size = 15\r\n          switch (d.label) {\r\n            case _this.labels[0]:\r\n              break;\r\n            case _this.labels[1]:\r\n              size = 15;\r\n              break;\r\n            case _this.labels[2]:\r\n              size = 15;\r\n              break;\r\n            default:\r\n              size = 15;\r\n              break;\r\n          }\r\n          return size * 2\r\n        })\r\n        .attr(\"fill\", d => {\r\n          for (let i = 0; i < this.labels.length; i++) {\r\n            if (d.label === this.labels[i]) return this.colors[i]\r\n          }\r\n        })\r\n        .attr(\"stroke\", \"none\")\r\n        .attr(\"name\", d => d.properties.name)\r\n        .attr(\"id\", d => d.id)\r\n        .call(this.drag(simulation))\r\n        // .on(\"click\", nodeClick)\r\n        .on('click', function (event) {\r\n          // console.dir(this)\r\n          const node = d3.select(this)\r\n          let nodeClass = node.attr(\"class\")\r\n          if (nodeClass === 'inactive') {\r\n            return\r\n          }\r\n          // node.attr(\"class\", \"fixed\")\r\n          // node.classed(\"fixed\", true)\r\n          // console.log(node)\r\n          //获取被选中元素的名字\r\n          let name = node.attr(\"name\")\r\n          let id = node.attr(\"id\")\r\n          let color = node.attr('fill')\r\n          // console.log(name, id, color)\r\n          //设置#info h4样式的颜色为该节点的颜色，文本为该节点name\r\n          _this.$set(_this.selectNodeData, 'id', id)\r\n          _this.$set(_this.selectNodeData, 'name', name)\r\n          _this.$set(_this.selectNodeData, 'color', color)\r\n\r\n          //遍历查找id对应的属性\r\n          for (let item of _this.nodes) {\r\n            if (item.id == id) {\r\n              // for(var key in item.properties)\r\n              _this.$set(_this.selectNodeData, 'properties', item.properties)\r\n            }\r\n          }\r\n          // 遍历节点，并调整图的样式\r\n          if (nodeClass !== 'active' && nodeClass !== 'fixed')\r\n            _this.changeGraphStyle(name)\r\n        })\r\n        .on('mouseenter', function (event) {\r\n          // console.dir(this)\r\n          const node = d3.select(this)\r\n          let nodeClass = node.attr(\"class\")\r\n          if (nodeClass === 'inactive') {\r\n            return\r\n          }\r\n          // node.attr(\"class\", \"fixed\")\r\n          // node.classed(\"fixed\", true)\r\n          // console.log(node)\r\n          //获取被选中元素的名字\r\n          let name = node.attr(\"name\")\r\n          let id = node.attr(\"id\")\r\n          let color = node.attr('fill')\r\n          // console.log(name, id, color)\r\n          //设置#info h4样式的颜色为该节点的颜色，文本为该节点name\r\n          _this.$set(_this.selectNodeData, 'id', id)\r\n          // _this.$set(_this.selectNodeData, 'name', name)\r\n          // _this.$set(_this.selectNodeData, 'color', color)\r\n          // 遍历节点，并调整图的样式\r\n          if (nodeClass !== 'active' && nodeClass !== 'fixed')\r\n            _this.changeGraphStyle(name)\r\n        })\r\n        .on('mouseleave', event => {\r\n          console.log(this.isNodeClicked)\r\n          if (!this.isNodeClicked) {\r\n            this.clearGraphStyle()\r\n            // 如果此时有搜索关键字，则鼠标离开时保留原搜索选中的节点\r\n            if (this.keywords !== '') {\r\n              this.searchKeyWords()\r\n            }\r\n          }\r\n        })\r\n        .on('contextmenu', d3.contextMenu(this.menu))\r\n      // .on('contextmenu', function (d, i) {\r\n      //   // 阻止默认右键菜单的弹出\r\n      //   d3.event.preventDefault()\r\n\r\n      // })\r\n      // .call(d3.drag()\r\n      //   .on(\"start\", dragstarted)\r\n      //   .on(\"drag\", dragged)\r\n      //   .on(\"end\", dragended)\r\n      // )\r\n\r\n      // 显示所有的文本\r\n      // 设置大小、填充颜色、名字、text()设置文本\r\n      // 使用 attr(\"text-anchor\", \"middle\")设置文本居中\r\n      var text = svg.append(\"g\")\r\n        .attr(\"class\", \"texts\")\r\n        .selectAll(\"text\")\r\n        .data(this.nodes)\r\n        .enter()\r\n        .append(\"text\").attr(\"font-size\", () => 13)\r\n        .attr(\"fill\", () => '#fff')\r\n        .attr('name', d => d.properties.name)\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .attr('x', function (d) {\r\n          return textBreaking(d3.select(this), d.properties.name)\r\n        })\r\n        .call(this.drag(simulation))\r\n        // .on(\"click\", nodeClick)\r\n        .on('click', function (event) {\r\n\r\n          // console.dir(this)\r\n          const text = d3.select(this)\r\n          // console.log(text)\r\n          // 获取被选中元素的名字\r\n          let name = text.attr(\"name\")\r\n          _this.$set(_this.selectNodeData, 'name', name)\r\n          let textClass = text.attr(\"class\")\r\n          if (textClass === 'inactive') {\r\n            return\r\n          }\r\n          // 根据文本名称获取节点的id\r\n          for (let item of _this.nodes) {\r\n            if (item.properties.name == name) {\r\n              // 设置节点id和标签属性\r\n              _this.$set(_this.selectNodeData, 'id', item.id)\r\n              _this.$set(_this.selectNodeData, 'properties', item.properties)\r\n              // 根据节点类型label获取节点颜色\r\n              let index = 0\r\n              while ((item.label) !== _this.labels[index]) {\r\n                ++index;\r\n                if (index > _this.labels.length)\r\n                  break\r\n              }\r\n              console.log(index)\r\n              _this.$set(_this.selectNodeData, 'color', _this.colors[index])\r\n            }\r\n          }\r\n          console.log(textClass)\r\n          if (textClass !== 'active' && textClass !== 'fixed')\r\n            _this.changeGraphStyle(name)\r\n        })\r\n        .on('mouseenter', function (event) {\r\n\r\n          // console.dir(this)\r\n          const text = d3.select(this)\r\n          // console.log(text)\r\n          // 获取被选中元素的名字\r\n          let name = text.attr(\"name\")\r\n          // _this.$set(_this.selectNodeData, 'name', name)\r\n          let textClass = text.attr(\"class\")\r\n          if (textClass === 'inactive') {\r\n            return\r\n          }\r\n          // 根据文本名称获取节点的id\r\n          // for (let item of _this.nodes) {\r\n          //   if (item.properties.name == name) {\r\n          //     // 设置节点id和标签属性\r\n          //     _this.$set(_this.selectNodeData, 'id', item.id)\r\n          //     _this.$set(_this.selectNodeData, 'properties', item.properties)\r\n          //     // 根据节点类型label获取节点颜色\r\n          //     let index = 0\r\n          //     while ((item.label) !== _this.labels[index]) {\r\n          //       ++index;\r\n          //       if (index > _this.labels.length)\r\n          //         break\r\n          //     }\r\n          //     console.log(index)\r\n          //     _this.$set(_this.selectNodeData, 'color', _this.colors[index])\r\n          //   }\r\n          // }\r\n          console.log(textClass)\r\n          if (textClass !== 'active' && textClass !== 'fixed')\r\n            _this.changeGraphStyle(name)\r\n        })\r\n        .on('mouseleave', (event) => {\r\n          if (!this.isNodeClicked) {\r\n            this.clearGraphStyle()\r\n            // 如果此时有搜索关键字，则鼠标离开时保留原搜索选中的节点\r\n            if (this.keywords !== '') {\r\n              this.searchKeyWords()\r\n            }\r\n          }\r\n        })\r\n        .on('contextmenu', d3.contextMenu(this.menu))\r\n      // .call(d3.drag()\r\n      //   .on(\"start\", dragstarted)\r\n      //   .on(\"drag\", dragged)\r\n      //   .on(\"end\", dragended)\r\n      // )\r\n\r\n      // 圆增加title\r\n      node.append(\"title\").text(d => d.properties.name)\r\n\r\n      // simulation中ticked数据初始化并生成图形\r\n      simulation.on(\"tick\", ticked)\r\n\r\n      simulation.force(\"link\")\r\n        .links(this.links)\r\n        .distance(d => { // 每一边的长度\r\n          let distance = 20\r\n          switch (d.source.label) {\r\n            case _this.labels[0]:\r\n              distance += 30;\r\n              break;\r\n            case _this.labels[1]:\r\n              distance += 25;\r\n              break;\r\n            case _this.labels[2]:\r\n              distance += 22;\r\n              break;\r\n            default:\r\n              distance += 20;\r\n              break;\r\n          }\r\n          switch (d.target.label) {\r\n            case _this.labels[0]:\r\n              distance += 30;\r\n              break;\r\n            case _this.labels[1]:\r\n              distance += 25;\r\n              break;\r\n            case _this.labels[2]:\r\n              distance += 22;\r\n              break;\r\n            default:\r\n              distance += 20;\r\n              break;\r\n          }\r\n          return distance * 2\r\n        })\r\n\r\n      /******************************************\r\n       * 内部功能函数\r\n       * 包括：ticked、文本分隔、节点和文本的点击事件\r\n       */\r\n      // ticked()函数确定link线的起始点x、y坐标 node确定中心点 文本通过translate平移变化\r\n      function ticked() {\r\n        link\r\n          .attr(\"x1\", d => d.source.x)\r\n          .attr(\"y1\", d => d.source.y)\r\n          .attr(\"x2\", d => d.target.x)\r\n          .attr(\"y2\", d => d.target.y)\r\n\r\n        linksName\r\n          .attr('transform', d => {\r\n            let x = Math.min(d.source.x, d.target.x) + Math.abs(d.source.x - d.target.x) / 2\r\n            let y = Math.min(d.source.y, d.target.y) + Math.abs(d.source.y - d.target.y) / 2 - 1\r\n            // tanA = a / b\r\n            // A = arctan(tanA)\r\n            let tanA = Math.abs(d.source.y - d.target.y) / Math.abs(d.source.x - d.target.x)\r\n            let angle = Math.atan(tanA) / Math.PI * 180\r\n            // let angle = Math.atan2(1,1)/Math.PI*180\r\n            // console.log(angle)\r\n            // 第一、二象限额外处理\r\n            if (d.source.x > d.target.x) {\r\n              // 第二象限\r\n              if (d.source.y <= d.target.y) {\r\n                angle = -angle\r\n              }\r\n              // else {  // 第三象限\r\n              //   angle = angle\r\n              // }\r\n            } else if (d.source.y > d.target.y) {\r\n              // 第一象限\r\n              angle = -angle\r\n            }\r\n            return 'translate(' + x + ',' + y + ')' + 'rotate(' + angle + ')'\r\n          })\r\n\r\n        node\r\n          .attr(\"cx\", d => d.x)\r\n          .attr(\"cy\", d => d.y)\r\n\r\n        text.attr('transform', function (d) {\r\n          let size = 15\r\n          switch (d.label) {\r\n            case _this.labels[0]:\r\n              break;\r\n            case _this.labels[1]:\r\n              size = 14;\r\n              break;\r\n            case _this.labels[2]:\r\n              size = 13;\r\n              break;\r\n            default:\r\n              size = 12;\r\n              break;\r\n          }\r\n          size -= 5\r\n          return 'translate(' + (d.x - size / 2 + 3) + ',' + (d.y + size / 2) + ')'\r\n        })\r\n      }\r\n\r\n      /**\r\n       * 文本分隔（根据字数在当前选择器中分隔三行，超过10字省略）\r\n       * @method textBreaking\r\n       * @param {d3text} 文本对应的DOM对象\r\n       * @param {text} 节点名称的文本值\r\n       * @return {void}\r\n       */\r\n      function textBreaking(d3text, text) {\r\n        const len = text.length\r\n        if (len <= 5) {\r\n          d3text.append('tspan')\r\n            .attr('x', 0)\r\n            .attr('y', 2)\r\n            .text(text)\r\n        } else {\r\n          const topText = text.substring(0, 3)\r\n          const midText = text.substring(3, 7)\r\n          let botText = text.substring(7, len)\r\n          let topY = -16\r\n          let midY = 0\r\n          let botY = 16\r\n          if (len <= 7) {\r\n            topY += 10\r\n            midY += 10\r\n          } else if (len > 10) {\r\n            botText = text.substring(7, 9) + '...'\r\n          }\r\n\r\n          d3text.text('')\r\n          d3text.append('tspan')\r\n            .attr('x', 0)\r\n            .attr('y', topY)\r\n            .text(function () {\r\n              return topText\r\n            })\r\n          d3text.append('tspan')\r\n            .attr('x', 0)\r\n            .attr('y', midY)\r\n            .text(function () {\r\n              return midText\r\n            })\r\n          d3text.append('tspan')\r\n            .attr('x', 0)\r\n            .attr('y', botY)\r\n            .text(function () {\r\n              return botText\r\n            })\r\n        }\r\n      }\r\n\r\n      // 分别定义节点和文本的点击事件\r\n      // 优化：由于点击前必定触发mouseenter事件，所以不用再去查找节点id\r\n      //      直接根据this.selectNodeData拿到节点信息\r\n      // 优化后：只需定义一个点击事件即可\r\n      function nodeClick(event, d) {\r\n        // console.log('node clicked!')\r\n        // sticked用于固定节点（无法实现节点固定功能）\r\n        // delete d.fx\r\n        // delete d.fy\r\n        // d3.select(this).classed(\"fixed\", true)\r\n        // simulation.alpha(1).restart()\r\n\r\n        // 获取被选中元素信息\r\n        // const node = d3.select(this)\r\n        // let name = node.attr(\"name\")\r\n        // let id = node.attr(\"id\")\r\n        // let color = node.attr('fill')\r\n        // console.log(name, id, color)\r\n\r\n        // 直接通过this.selectNodeData拿到节点信息\r\n        event.cancelBubble = true\r\n        event.stopPropagation() // 阻止事件冒泡\r\n\r\n        const name = _this.selectNodeData.name\r\n        _this.isNodeClicked = true\r\n        _this.changeGraphStyle(name)\r\n\r\n        return false\r\n      }\r\n    },\r\n    // 根据当前节点名称来更改图样式\r\n    changeGraphStyle(name) {\r\n      // console.log(this.isNodeClicked)\r\n      // 选择#svg1 .nodes中所有的circle，再增加个class\r\n      this.svgDom.select('.nodes').selectAll('circle').attr('class', d => {\r\n        // 节点属性name是否等于name，返回fixed（激活选中样式）\r\n        if (d.properties.name == name) {\r\n          return 'fixed'\r\n        }\r\n        // 当前节点返回空，否则其他节点循环判断是否被隐藏起来(CSS设置隐藏)\r\n        else {\r\n          // links链接的起始节点进行判断,如果其id等于name则显示这类节点\r\n          // 注意: graph = data\r\n          for (var i = 0; i < this.links.length; i++) {\r\n            // 如果links的起点等于name，并且终点等于正在处理的则显示\r\n            if (this.links[i]['source'].properties.name == name && this.links[i]['target'].id == d.id) {\r\n              return 'active'\r\n            }\r\n            if (this.links[i]['target'].properties.name == name && this.links[i]['source'].id == d.id) {\r\n              return 'active'\r\n            }\r\n          }\r\n          return this.isNodeClicked ? 'inactive' : ''\r\n        }\r\n      })\r\n      // 处理相邻的文字是否隐藏\r\n      this.svgDom.select('.texts').selectAll('text')\r\n        .attr('class', d => {\r\n          // 节点属性name是否等于name，返回fixed（激活选中样式）\r\n          if (d.properties.name == name) {\r\n            return ''\r\n          }\r\n          // 当前节点返回空，否则其他节点循环判断是否被隐藏起来(CSS设置隐藏)\r\n          else {\r\n            // links链接的起始节点进行判断,如果其id等于name则显示这类节点\r\n            // 注意: graph = data\r\n            for (var i = 0; i < this.links.length; i++) {\r\n              // 如果links的起点等于name，并且终点等于正在处理的则显示\r\n              if (this.links[i]['source'].properties.name == name && this.links[i]['target'].id == d.id) {\r\n                return ''\r\n              }\r\n              if (this.links[i]['target'].properties.name == name && this.links[i]['source'].id == d.id) {\r\n                return ''\r\n              }\r\n            }\r\n            return this.isNodeClicked ? 'inactive' : ''\r\n          }\r\n        })\r\n      // 处理相邻的边line是否隐藏 注意 ||\r\n      this.svgDom.select(\".links\").selectAll('line')\r\n        .attr('class', d => {\r\n          if (d.source.properties.name == name || d.target.properties.name == name) {\r\n            return 'active'\r\n          } else {\r\n            return this.isNodeClicked ? 'inactive' : ''\r\n          }\r\n        })\r\n        .attr('marker-end', d => {\r\n          if (d.source.properties.name == name || d.target.properties.name == name) {\r\n            return 'url(#posActMarker)'\r\n          } else {\r\n            return 'url(#posMarker)'\r\n          }\r\n        })\r\n      // 处理相邻的边上文字是否隐藏 注意 ||\r\n      this.svgDom.select(\".linkTexts\").selectAll('text')\r\n        .attr('class', d => {\r\n          if (d.source.properties.name == name || d.target.properties.name == name) {\r\n            return 'active'\r\n          } else {\r\n            return this.isNodeClicked ? 'inactive' : ''\r\n          }\r\n        })\r\n    },\r\n    clearGraphStyle() {\r\n      // 移除所有样式\r\n      this.svgDom.select('.nodes').selectAll('circle').attr('class', '')\r\n      this.svgDom.select(\".texts\").selectAll('text').attr('class', '')\r\n      this.svgDom.select('.links').selectAll('line').attr('class', '').attr('marker-end', 'url(#posMarker)')\r\n      this.svgDom.select(\".linkTexts\").selectAll('text').attr('class', '')\r\n      // d3.select(this).attr('class', '')\r\n    },\r\n    drag(simulation) {\r\n      function dragsubject(event) {\r\n        return simulation.find(event.x, event.y);\r\n      }\r\n\r\n      function dragstarted(event) {\r\n        if (!event.active) simulation.alphaTarget(0.3).restart();\r\n        event.subject.fx = event.subject.x;\r\n        event.subject.fy = event.subject.y;\r\n      }\r\n\r\n      function dragged(event) {\r\n        event.subject.fx = event.x;\r\n        event.subject.fy = event.y;\r\n      }\r\n\r\n      function dragended(event) {\r\n        if (!event.active) simulation.alphaTarget(0);\r\n        // 注释以下代码，使拖动结束后固定节点\r\n        // event.subject.fx = null;\r\n        // event.subject.fy = null;\r\n      }\r\n\r\n      return d3.drag()\r\n        .subject(dragsubject)\r\n        .on(\"start\", dragstarted)\r\n        .on(\"drag\", dragged)\r\n        .on(\"end\", dragended)\r\n    },\r\n    // 绘制关系箭头\r\n    addMarkers() {\r\n      // 定义箭头的标识\r\n      var defs = this.svgDom.append(\"defs\")\r\n      //未点击时箭头\r\n      const posMarker = defs.append(\"marker\")\r\n        .attr(\"id\", \"posMarker\")\r\n        .attr(\"orient\", \"auto\")\r\n        .attr(\"stroke-width\", 2)\r\n        .attr(\"markerUnits\", \"strokeWidth\")\r\n        .attr(\"markerUnits\", \"userSpaceOnUse\")\r\n        .attr(\"viewBox\", \"0 -5 10 10\")\r\n        .attr(\"refX\", 31)\r\n        .attr(\"refY\", 0)\r\n        .attr(\"markerWidth\", 12)\r\n        .attr(\"markerHeight\", 12)\r\n        .append(\"path\")\r\n        .attr(\"d\", \"M 0 -5 L 10 0 L 0 5\")\r\n        .attr('fill', '#5399ed')\r\n        .attr(\"stroke-opacity\", 0.6);\r\n      //点击后箭头\r\n      const posActMarker = defs.append(\"marker\")\r\n        .attr(\"id\", \"posActMarker\")\r\n        .attr(\"orient\", \"auto\")\r\n        .attr(\"stroke-width\", 2)\r\n        .attr(\"markerUnits\", \"strokeWidth\")\r\n        .attr(\"markerUnits\", \"userSpaceOnUse\")\r\n        .attr(\"viewBox\", \"0 -5 10 10\")\r\n        .attr(\"refX\", 31)\r\n        .attr(\"refY\", 0)\r\n        .attr(\"markerWidth\", 12)\r\n        .attr(\"markerHeight\", 12)\r\n        .append(\"path\")\r\n        .attr(\"d\", \"M 0 -5 L 10 0 L 0 5\")\r\n        .attr('fill', '#1E90FF')\r\n        .attr(\"stroke-opacity\", 0.6);\r\n      // const negMarker = defs.append(\"marker\")\r\n      //   .attr(\"id\",\"negMarker\")\r\n      //   .attr(\"orient\",\"auto\")\r\n      //   .attr(\"stroke-width\",2)\r\n      //   .attr(\"markerUnits\", \"strokeWidth\")\r\n      //   .attr(\"markerUnits\", \"userSpaceOnUse\")\r\n      //   .attr(\"viewBox\", \"0 -5 10 10\")\r\n      //   .attr(\"refX\", -25)\r\n      //   .attr(\"refY\", 0)\r\n      //   .attr(\"markerWidth\", 12)\r\n      //   .attr(\"markerHeight\", 12)\r\n      //   .append(\"path\")\r\n      //   .attr(\"d\", \"M 10 -5 L 0 0 L 10 5\")\r\n      //   .attr('fill', '#999')\r\n      //   .attr(\"stroke-opacity\", 0.6);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import '@/plugins/d3-context-menu';\r\n\r\n$opacity: 0; /* 显示的不透明度 */\r\n$activeColor: #2ff60c; /* 激活的颜色 */\r\n.policyFont {\r\n  margin-right: 10px;\r\n  font-weight: 530;\r\n}\r\n\r\n.el-button--primary {\r\n  color: #FFF;\r\n  background: #77f58e;\r\n  height: 50px;\r\n  font-size: 20px;\r\n  font-family: 等线;\r\n  font-weight: 550;\r\n}\r\n\r\n.el-button--primary.is-active,\r\n.el-button--primary:active {\r\n  background: #08ee04;\r\n  border-color: #000000;\r\n  color: #fff;\r\n}\r\n\r\n.el-button--primary:focus,\r\n.el-button--primary:hover {\r\n  background: #b7f59d;\r\n  border-color: #e4f4c2;\r\n  color: #fff;\r\n}\r\n\r\n.el-select {\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 130px;\r\n}\r\n\r\n\r\n.el-input--medium .el-input__inner {\r\n  height: 50px;\r\n  font-size: 20px;\r\n}\r\n\r\n.el-button--primary {\r\n  color: #FFF;\r\n  background-color: #1e456b;\r\n  border-color: #1e456b;\r\n  height: 50px;\r\n  font-size: 20px;\r\n  font-family: 等线;\r\n  font-weight: 550;\r\n}\r\n\r\n::v-deep .el-input__inner {\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n  border: 2px solid #a6a6a6;\r\n}\r\n\r\n::v-deep .el-button--medium {\r\n  padding: 10px 20px;\r\n  border-radius: 13px;\r\n}\r\n\r\n.search {\r\n  display: inline-block;\r\n}\r\n\r\n.el-button--default {\r\n  color: #FFF;\r\n  background-color: #2a56bb;\r\n  border-color: #2a56bb;\r\n  height: 50px;\r\n  font-size: 20px;\r\n  font-family: 等线;\r\n  font-weight: 550;\r\n}\r\n\r\n.search-bar {\r\n  width: 80%;\r\n  display: inline-block;\r\n  background-color: #e4f5e2;\r\n  margin-top: 20px;\r\n  -webkit-box-shadow: #666 0 0 0.1rem;\r\n  -moz-box-shadow: #666 0 0 0.1rem;\r\n  box-shadow: #666 0 0 0.1rem;\r\n}\r\n\r\n/*设置节点及边的样式*/\r\n.links line {\r\n  stroke: #5399ed; // #bbb\r\n  stroke-opacity: 0.2;\r\n\r\n  &.inactive {\r\n    /* display: none !important; */\r\n    opacity: $opacity;\r\n    stroke: $activeColor;\r\n  }\r\n\r\n  &.active {\r\n    stroke: $activeColor;\r\n    stroke-width: 3px;\r\n  }\r\n\r\n  &.hide {\r\n    display: none !important;\r\n  }\r\n}\r\n\r\n.nodes circle {\r\n stroke: rgb(184, 213, 247);\r\n  stroke-width: 1px;\r\n  \r\n  fill: rgb(89, 228, 29);  //控制圆圈的颜色\r\n\r\n\r\n\r\n  &.fixed {\r\n   \r\n   fill: rgb(90, 251, 21);\r\n    stroke: #FFC0CB ;\r\n    stroke-width: 20px;\r\n    stroke-opacity: $opacity + 0.3;\r\n  // color:#77f58e;\r\n    stroke: $activeColor;\r\n  }\r\n\r\n  &.inactive {\r\n     display: none !important; \r\n    fill: rgb(90, 251, 21);\r\n    stroke: $activeColor;\r\n    opacity: $opacity;\r\n  }\r\n\r\n  &.active {\r\n    fill: rgb(90, 251, 21);\r\n  //  stroke: $activeColor;\r\n    stroke-width: 4px;\r\n  }\r\n\r\n  &:hover {\r\n  //  cursor: pointer;\r\n    fill: rgb(90, 251, 21);\r\n  }\r\n\r\n  &.hide {\r\n    display: none !important;\r\n    fill: rgb(90, 251, 21);\r\n  }\r\n}\r\n\r\n.texts text {\r\n  cursor: pointer;\r\n  //text-decoration: none;\r\n  user-select: none;\r\n  color: #000000;\r\n  &:hover {\r\n    \r\n    stroke: $activeColor;\r\n    \r\n  }\r\n\r\n  &.inactive {\r\n    /* display: none !important; */\r\n    opacity: $opacity;\r\n    fill: rgb(90, 251, 21);\r\n    stroke: $activeColor;\r\n  }\r\n}\r\n\r\n.linkTexts text {\r\n  stroke: #5776ef; // #bbb\r\n  stroke-opacity: 1;\r\n\r\n  &.active {\r\n    stroke: $activeColor;\r\n  }\r\n\r\n  &.inactive {\r\n    /* display: none !important; */\r\n    opacity: $opacity;\r\n    fill: rgb(90, 251, 21);\r\n  }\r\n}\r\n\r\n #positiveMarker path {\r\n  fill: rgb(31, 16, 239);\r\n}\r\n</style>\r\n<style lang=\"scss\" scoped>\r\n@media only screen and (max-width: 1125px) {\r\n  #info, #mode {\r\n    display: none !important;\r\n  }\r\n}\r\n\r\n.el-col-7 {\r\n  width: 240px;\r\n  padding-left: 0px;\r\n  padding-right: 0px;\r\n}\r\n\r\n.font-sky {\r\n  font-size: 18px;\r\n  color: #034c6a !important;\r\n}\r\n\r\n#indicator {\r\n  position: fixed;\r\n  left: 50px;\r\n  bottom: 30px;\r\n  left: var(--indicator_left);\r\n  top: var(--indicator_top);\r\n  text-align: left;\r\n  color: #f2f2f2;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n\r\n  & > div {\r\n    margin-bottom: 4px;\r\n  }\r\n\r\n  span {\r\n    display: inline-block;\r\n    width: 32px;\r\n    height: 16px;\r\n    position: relative;\r\n    top: 2px;\r\n    margin-right: 8px;\r\n  }\r\n}\r\n\r\n\r\n/*mode选项样式*/\r\n#mode {\r\n  position: absolute;\r\n  display: flex;\r\n // flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  top: 200px;\r\n  left: 40px;\r\n\r\n\r\n  .gState span {\r\n    display: inline-block;\r\n    border: 1px solid rgb(42, 16, 238);\r\n    color: rgb(114, 249, 249);\r\n    padding: 6px 10px;\r\n    border-radius: 4px;\r\n    font-size: 14px;\r\n    transition: blue, background-color .3s;\r\n    -o-transition: red, background-color .3s;\r\n    -ms-transition: black, background-color .3s;\r\n    -moz-transition: white, background-color .3s;\r\n    -webkit-transition: purple, background-color .3s;\r\n\r\n    ~ .active, ~ :hover {\r\n    //  background-color: rgb(17, 239, 36);\r\n   //   color: rgb(125, 243, 62);\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  .gState span.active, .gState span:hover {\r\n    background-color: #fff;\r\n    color: rgb(39, 236, 25);\r\n    cursor: pointer;\r\n  }\r\n}\r\n\r\nsvg {\r\n  background-color: #ddf5cf;\r\n // filter: progid:DXImageTransform.Microsoft.Shadow(color=#909090, direction=120, strength=0);\r\n  -webkit-box-shadow: rgb(125, 201, 243) 0 0 0.1rem;\r\n  -moz-box-shadow:  rgb(125, 201, 243) 0 0 0.1rem;\r\n  box-shadow:  rgb(125, 201, 243) 0 0 0.1rem;\r\n  margin-top: 30px;\r\n}\r\n\r\n/*悬浮节点的info样式*/\r\n#info {\r\n  position: fixed;\r\n  top: var(--info_top);\r\n  right: 14%;\r\n width: 300px;\r\n\r\n\r\n  .node-card {\r\n    border: 1px solid #9faecf;\r\n    background-color: #00aeff6b;\r\n    color: #fff;\r\n    text-align: left;\r\n    transition:  #00aeff6b;\r\n    // transition-delay: .3s;\r\n    // transition-timing-function: ease;\r\n    .el-card__header {\r\n      border-bottom: 1px solid #90cdd9;\r\n    }\r\n\r\n    ::v-deep .el-card__body {\r\n      padding: 20px;\r\n      overflow-y: auto;\r\n      max-height: 1000px;\r\n      background-color: #60b5ea6b;\r\n    }\r\n\r\n    ::v-deep .el-card__body::-webkit-scrollbar{\r\n      width: 8px;\r\n      height: 4px;\r\n      background-color: #60b5ea6b;\r\n    }\r\n\r\n    ::v-deep .el-card__body::-webkit-scrollbar-thumb {\r\n      border-radius: 3px;\r\n      box-shadow: inset 0 0 5px rgba(165, 235, 227, 0.2);\r\n      background-color: #60b5ea6b;\r\n    \r\n    }\r\n\r\n    ::v-deep .el-card__body::-webkit-scrollbar-track {\r\n      box-shadow: inset 0 0 5px rgba(165, 235, 227, 0.2);\r\n      background-color: #60b5ea6b;\r\n    }\r\n\r\n    ::v-deep .el-card__body::-webkit-scrollbar-corner {\r\n      background-color: #60b5ea6b;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./d3graph.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./d3graph.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./d3graph.vue?vue&type=template&id=6b828699&scoped=true&\"\nimport script from \"./d3graph.vue?vue&type=script&lang=js&\"\nexport * from \"./d3graph.vue?vue&type=script&lang=js&\"\nimport style0 from \"./d3graph.vue?vue&type=style&index=0&id=6b828699&prod&lang=scss&\"\nimport style1 from \"./d3graph.vue?vue&type=style&index=1&id=6b828699&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6b828699\",\n  null\n  \n)\n\nexport default component.exports","<!--\r\n * @Author: 高鸿宇 10395429+gao-hong-yu@user.noreply.gitee.com\r\n * @Date: 2023-01-26 11:11:31\r\n * @LastEditors: 高鸿宇 10395429+gao-hong-yu@user.noreply.gitee.com\r\n * @LastEditTime: 2023-02-05 11:02:58\r\n * @FilePath: \\double-carbon-knowledge-master\\src\\views\\2dView.vue\r\n * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n-->\r\n<template>\r\n  <div class=\"gContainer\">\r\n    <gSearch @getData=\"update\" />\r\n    <d3graph\r\n      :data=\"data\"\r\n      :names=\"names\"\r\n      :labels=\"labels\"\r\n      :linkTypes=\"linkTypes\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport gSearch from '@/components/gSearch.vue'\r\nimport d3graph from '@/components/d3graph.vue'\r\nexport default {\r\n  components: {\r\n    gSearch,\r\n    d3graph\r\n  },\r\n  data () {\r\n    return {\r\n      data: {\r\n        nodes: [],\r\n        links: []\r\n      },\r\n      // names: ['发布年份', '发布人', '政策来源', '政策名称', '政策类型', '政策概况'],\r\n      // labels: ['doc_year', 'doc_author', 'doc_source', 'doc', 'doc_type', 'doc_url'],\r\n      names: [\"患病名称\", \"简介\", \"发病部位\", \"相关症状\", \"治疗周期\", \"治愈率\",\"防治措施\"],\r\n      labels: ['disease_name', 'intro', 'pathogenic_site', 'correlation', 'treatment_cycle', 'cure_rate','methods'],\r\n      linkTypes: ['']\r\n    }\r\n  },\r\n  methods: {\r\n    update (json) {\r\n      this.d3jsonParser(json)\r\n    },\r\n    d3jsonParser (json) {\r\n      const nodes =[]\r\n      const links = [] // 存放节点和关系\r\n      const nodeSet = [] // 存放去重后nodes的id\r\n\r\n      // 使用vue直接通过require获取本地json，不再需要使用d3.json获取数据\r\n      // d3.json('./../data/records.json', function (error, data) {\r\n      //   if (error) throw error\r\n      //   graph = data\r\n      //   console.log(graph[0].p)\r\n      // })\r\n\r\n      for (let item of json) {\r\n        for (let segment of item.p.segments) {\r\n          // 重新更改data格式\r\n          if (nodeSet.indexOf(segment.start.identity) == -1) {\r\n            nodeSet.push(segment.start.identity)\r\n            nodes.push({\r\n              id: segment.start.identity,\r\n              label: segment.start.labels[0],\r\n              properties: segment.start.properties\r\n            })\r\n          }\r\n          if (nodeSet.indexOf(segment.end.identity) == -1) {\r\n            nodeSet.push(segment.end.identity)\r\n            nodes.push({\r\n              id: segment.end.identity,\r\n              label: segment.end.labels[0],\r\n              properties: segment.end.properties\r\n            })\r\n          }\r\n          links.push({\r\n            source: segment.relationship.start,\r\n            target: segment.relationship.end,\r\n            type: segment.relationship.type,\r\n            properties: segment.relationship.properties\r\n          })\r\n        }\r\n      }\r\n      this.data = { nodes, links }\r\n      let fullscreenLoading = false\r\n      this.$events.$emit('setfullscreenLoading',fullscreenLoading)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.gContainer {\r\n  position: relative;\r\n  border: 2px rgb(227, 245, 192) solid;\r\n  //background-color: #78fe30;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n  height: 100%;\r\n  background-image: linear-gradient(60deg, #abecd6 0%, #fbed96 100%);\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./2dView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./2dView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./2dView.vue?vue&type=template&id=15569f94&scoped=true&\"\nimport script from \"./2dView.vue?vue&type=script&lang=js&\"\nexport * from \"./2dView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./2dView.vue?vue&type=style&index=0&id=15569f94&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"15569f94\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"site-wrapper site-page--not-found\"},[_c('div',{staticClass:\"site-content__wrapper\"},[_c('div',{staticClass:\"site-content\"},[_c('h2',{staticClass:\"not-found-title\"},[_vm._v(\"404\")]),_vm._m(0),_c('el-button',{on:{\"click\":function($event){return _vm.$router.go(-1)}}},[_vm._v(\"返回上一页\")]),_c('el-button',{staticClass:\"not-found-btn-gohome\",attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.$router.push('/')}}},[_vm._v(\"进入首页\")])],1)])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('p',{staticClass:\"not-found-desc\"},[_vm._v(\"抱歉！您访问的页面\"),_c('em',[_vm._v(\"失联\")]),_vm._v(\"啦 ...\")])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"site-wrapper site-page--not-found\">\r\n    <div class=\"site-content__wrapper\">\r\n      <div class=\"site-content\">\r\n        <h2 class=\"not-found-title\">404</h2>\r\n        <p class=\"not-found-desc\">抱歉！您访问的页面<em>失联</em>啦 ...</p>\r\n        <el-button @click=\"$router.go(-1)\">返回上一页</el-button>\r\n        <el-button type=\"primary\" class=\"not-found-btn-gohome\" @click=\"$router.push('/')\">进入首页</el-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: '404'\r\n}\r\n</script>\r\n\r\n<style>\r\n.site-wrapper.site-page--not-found {\r\n  position: absolute;\r\n  top: 60px;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  overflow: hidden;\r\n}\r\n.site-content {\r\n  position: fixed;\r\n  top: 15%;\r\n  left: 50%;\r\n  z-index: 2;\r\n  padding: 30px;\r\n  text-align: center;\r\n  transform: translate(-50%, 0);\r\n}\r\n.site-content__wrapper {\r\n  padding: 0;\r\n  margin: 0;\r\n  background-color: #fff;\r\n}\r\n.not-found-btn-gohome {\r\n  margin-left: 30px;\r\n}\r\n.not-found-desc {\r\n  margin: 0 0 30px;\r\n  font-size: 26px;\r\n  text-transform: uppercase;\r\n  color: rgb(118, 131, 143);\r\n}\r\n.not-found-desc em {\r\n  font-style: normal;\r\n  color: #ee8145;\r\n}\r\n.not-found-title {\r\n  margin: 20px 0 15px;\r\n  font-size: 8em;\r\n  font-weight: 500;\r\n  color: rgb(55, 71, 79);\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./404.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./404.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./404.vue?vue&type=template&id=9e3d39e8&\"\nimport script from \"./404.vue?vue&type=script&lang=js&\"\nexport * from \"./404.vue?vue&type=script&lang=js&\"\nimport style0 from \"./404.vue?vue&type=style&index=0&id=9e3d39e8&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\nimport Home from '../views/2dView.vue'\r\nimport NotFound from '../views/404'\r\n\r\nVue.use(VueRouter)\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'Home',\r\n    component: Home,\r\n    meta:{\r\n      // 页面标题title\r\n      title: '病虫害知识图谱'\r\n    }\r\n  },{\r\n    path: '/404',\r\n    name: 'notFound',\r\n    component: NotFound,\r\n    meta:{\r\n      // 页面标题title\r\n      title: '404资源未找到'\r\n    }\r\n  }\r\n]\r\n\r\nconst router = new VueRouter({\r\n  routes\r\n})\r\n\r\nexport default router\r\n","import Vue from 'vue'\r\n\r\n// 导入ElementUI\r\nimport ElementUI from 'element-ui'\r\nimport 'element-ui/lib/theme-chalk/index.css'\r\n\r\nimport App from './App.vue'\r\nimport router from './router'\r\n\r\nVue.use(ElementUI)\r\nVue.config.productionTip = false\r\nVue.prototype.$events = new Vue()\r\nnew Vue({\r\n  router,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  /* 路由发生变化修改页面title */\r\n  if (to.meta.title) {\r\n    document.title = to.meta.title\r\n  }\r\n  next()\r\n})\r\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./d3graph.vue?vue&type=style&index=1&id=6b828699&prod&lang=scss&scoped=true&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./2dView.vue?vue&type=style&index=0&id=15569f94&prod&lang=scss&scoped=true&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./gSearch.vue?vue&type=style&index=0&id=6955bc42&prod&lang=scss&\""],"sourceRoot":""}